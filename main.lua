--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v81 = v2(v0(v30, 16));
			if v19 then
				local v91 = v5(v81, v19);
				v19 = nil;
				return v91;
			else
				return v81;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v82 = (v31 / ((5 - 3) ^ (v32 - (2 - 1)))) % (((1 + 2) - 1) ^ (((v33 - (2 - 1)) - (v32 - (620 - (555 + 64)))) + 1));
			return v82 - (v82 % (932 - (857 + 74)));
		else
			local v83 = 2 ^ (v32 - (569 - ((1244 - (282 + 595)) + 201)));
			return (((v31 % (v83 + v83)) >= v83) and (928 - (214 + 713))) or ((1637 - (1523 + 114)) + 0);
		end
	end
	local function v21()
		local v34 = 0 + 0;
		local v35;
		while true do
			if (v34 == (1 - 0)) then
				return v35;
			end
			if (v34 == (1270 - (226 + 1044))) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + ((4641 - 3575) - (68 + 997));
				v34 = 1;
			end
		end
	end
	local function v22()
		local v36, v37 = v1(v16, v18, v18 + (119 - (32 + 85)));
		v18 = v18 + 2 + 0;
		return (v37 * (57 + 199)) + v36;
	end
	local function v23()
		local v38, v39, v40, v41 = v1(v16, v18, v18 + (960 - (892 + 65)));
		v18 = v18 + (9 - (185 - (67 + 113)));
		return (v41 * (31011612 - (10437696 + 3796700))) + (v40 * (120312 - (134483 - 79707))) + (v39 * (606 - (87 + 263))) + v38;
	end
	local function v24()
		local v42 = 0 + 0 + (430 - (44 + 386));
		local v43;
		local v44;
		local v45;
		local v46;
		local v47;
		local v48;
		while true do
			if (v42 == (7 - 5)) then
				v47 = v20(v44, 973 - (802 + 150), 83 - 52);
				v48 = ((v20(v44, (1543 - (998 + 488)) - (797 - (201 + 571))) == (1 + 0)) and -(998 - (915 + (1220 - (116 + 1022))))) or (2 - 1);
				v42 = 2 + 1;
			end
			if (v42 == (1 - 0)) then
				v45 = 1188 - ((4450 - 3381) + 118);
				v46 = (v20(v44, 1, 45 - 25) * (2 ^ 32)) + v43;
				v42 = 2;
			end
			if (v42 == (6 - (2 + 1))) then
				if (v47 == ((0 - 0) + 0)) then
					if (v46 == (0 - 0)) then
						return v48 * 0;
					else
						v47 = 1 + 0;
						v45 = 791 - (368 + 423);
					end
				elseif (v47 == (6433 - 4386)) then
					return ((v46 == (18 - (10 + (28 - 20)))) and (v48 * ((3 - 2) / 0))) or (v48 * NaN);
				end
				return v8(v48, v47 - (1465 - (416 + 26))) * (v45 + (v46 / ((6 - 4) ^ (23 + 29))));
			end
			if (v42 == (0 - 0)) then
				v43 = v23();
				v44 = v23();
				v42 = 439 - (145 + (1152 - (814 + 45)));
			end
		end
	end
	local function v25(v49)
		local v50;
		if not v49 then
			v49 = v23();
			if (v49 == (0 - 0)) then
				return "";
			end
		end
		v50 = v3(v16, v18, (v18 + v49) - (1 + 0));
		v18 = v18 + v49;
		local v51 = {};
		for v65 = 1 + 0, #v50 do
			v51[v65] = v2(v1(v3(v50, v65, v65)));
		end
		return v6(v51);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v52 = (function()
			return 0 + 0;
		end)();
		local v53 = (function()
			return;
		end)();
		local v54 = (function()
			return;
		end)();
		local v55 = (function()
			return;
		end)();
		local v56 = (function()
			return;
		end)();
		local v57 = (function()
			return;
		end)();
		local v58 = (function()
			return;
		end)();
		while true do
			if (v52 == (1581 - (1535 + 46))) then
				local v87 = (function()
					return 0 + 0;
				end)();
				local v88 = (function()
					return;
				end)();
				while true do
					if (v87 == (935 - (39 + 896))) then
						v88 = (function()
							return 0;
						end)();
						while true do
							if ((3 - 1) ~= v88) then
							else
								v52 = (function()
									return #"}";
								end)();
								break;
							end
							if ((560 - (306 + 254)) == v88) then
								v53 = (function()
									return {};
								end)();
								v54 = (function()
									return {};
								end)();
								v88 = (function()
									return 1 - 0;
								end)();
							end
							if (v88 ~= 1) then
							else
								v55 = (function()
									return {};
								end)();
								v56 = (function()
									return {v53,v54,nil,v55};
								end)();
								v88 = (function()
									return 2;
								end)();
							end
						end
						break;
					end
				end
			end
			if (v52 == (5 - 3)) then
				for v92 = #"~", v23() do
					local v93 = (function()
						return 1467 - (899 + 568);
					end)();
					local v94 = (function()
						return;
					end)();
					local v95 = (function()
						return;
					end)();
					while true do
						if (v93 ~= (1 + 0)) then
						else
							while true do
								if (v94 == 0) then
									v95 = (function()
										return v21();
									end)();
									if (v20(v95, #".", #"~") == (0 + 0)) then
										local v108 = (function()
											return 0 + 0;
										end)();
										local v109 = (function()
											return;
										end)();
										local v110 = (function()
											return;
										end)();
										local v111 = (function()
											return;
										end)();
										while true do
											if (v108 == (399 - (115 + 281))) then
												if (v20(v110, #"xnx", #"nil") == #"}") then
													v111[#"?id="] = (function()
														return v58[v111[#".com"]];
													end)();
												end
												v53[v92] = (function()
													return v111;
												end)();
												break;
											end
											if (v108 ~= 1) then
											else
												v111 = (function()
													return {v22(),v22(),nil,nil};
												end)();
												if (v109 == (290 - (60 + 230))) then
													local v695 = (function()
														return 0;
													end)();
													local v696 = (function()
														return;
													end)();
													while true do
														if (v695 == 0) then
															v696 = (function()
																return 0 + 0;
															end)();
															while true do
																if (v696 == 0) then
																	v111[#"xxx"] = (function()
																		return v22();
																	end)();
																	v111[#"asd1"] = (function()
																		return v22();
																	end)();
																	break;
																end
															end
															break;
														end
													end
												elseif (v109 == #"{") then
													v111[#"xxx"] = (function()
														return v23();
													end)();
												elseif (v109 == (4 - 2)) then
													v111[#"xnx"] = (function()
														return v23() - ((574 - (426 + 146)) ^ (58 - 42));
													end)();
												elseif (v109 ~= #"-19") then
												else
													local v1211 = (function()
														return 867 - (550 + 317);
													end)();
													local v1212 = (function()
														return;
													end)();
													while true do
														if (v1211 ~= 0) then
														else
															v1212 = (function()
																return 0 - 0;
															end)();
															while true do
																if (v1212 ~= (1456 - (282 + 1174))) then
																else
																	v111[#"19("] = (function()
																		return v23() - ((813 - (569 + 242)) ^ (22 - 6));
																	end)();
																	v111[#"0836"] = (function()
																		return v22();
																	end)();
																	break;
																end
															end
															break;
														end
													end
												end
												v108 = (function()
													return 5 - 3;
												end)();
											end
											if (v108 ~= (1 + 1)) then
											else
												if (v20(v110, #"}", #",") == #"\\") then
													v111[287 - (134 + 151)] = (function()
														return v58[v111[1253 - (721 + 530)]];
													end)();
												end
												if (v20(v110, 1667 - (970 + 695), 3 - 1) == #"{") then
													v111[#"19("] = (function()
														return v58[v111[#"xxx"]];
													end)();
												end
												v108 = (function()
													return 1993 - (582 + 1408);
												end)();
											end
											if (v108 == (0 - 0)) then
												local v205 = (function()
													return 700 - (271 + 429);
												end)();
												while true do
													if (v205 ~= (0 - 0)) then
													else
														v109 = (function()
															return v20(v95, 7 - 5, #"asd");
														end)();
														v110 = (function()
															return v20(v95, #"xnxx", 1830 - (1195 + 629));
														end)();
														v205 = (function()
															return 1501 - (1408 + 92);
														end)();
													end
													if (v205 == (1 - 0)) then
														v108 = (function()
															return 242 - (187 + 54);
														end)();
														break;
													end
												end
											end
										end
									end
									break;
								end
							end
							break;
						end
						if (v93 == 0) then
							v94 = (function()
								return 780 - (162 + 618);
							end)();
							v95 = (function()
								return nil;
							end)();
							v93 = (function()
								return 1 + 0;
							end)();
						end
					end
				end
				for v96 = #"|", v23() do
					v54[v96 - #"|"] = (function()
						return v28();
					end)();
				end
				return v56;
			end
			if (v52 == #":") then
				local v89 = (function()
					return 0 + 0;
				end)();
				local v90 = (function()
					return;
				end)();
				while true do
					if (v89 == (0 + 0)) then
						v90 = (function()
							return 1171 - (418 + 753);
						end)();
						while true do
							if (v90 == (3 - 1)) then
								v52 = (function()
									return 2;
								end)();
								break;
							end
							if (v90 ~= 1) then
							else
								for v103 = #" ", v57 do
									local v104 = (function()
										return 0 + 0;
									end)();
									local v105 = (function()
										return;
									end)();
									local v106 = (function()
										return;
									end)();
									local v107 = (function()
										return;
									end)();
									while true do
										if (v104 == (0 - 0)) then
											local v112 = (function()
												return 0 + 0;
											end)();
											while true do
												if (v112 ~= (0 + 0)) then
												else
													v105 = (function()
														return 0;
													end)();
													v106 = (function()
														return nil;
													end)();
													v112 = (function()
														return 1;
													end)();
												end
												if (v112 == (1637 - (1373 + 263))) then
													v104 = (function()
														return 1001 - (451 + 549);
													end)();
													break;
												end
											end
										end
										if (v104 == (1 + 0)) then
											v107 = (function()
												return nil;
											end)();
											while true do
												if (v105 == (529 - (406 + 123))) then
													local v212 = (function()
														return 0 - 0;
													end)();
													local v213 = (function()
														return;
													end)();
													while true do
														if (v212 ~= 0) then
														else
															v213 = (function()
																return 0 + 0;
															end)();
															while true do
																if (v213 == (0 - 0)) then
																	v106 = (function()
																		return v21();
																	end)();
																	v107 = (function()
																		return nil;
																	end)();
																	v213 = (function()
																		return 1385 - (746 + 638);
																	end)();
																end
																if ((1 + 0) == v213) then
																	v105 = (function()
																		return #"|";
																	end)();
																	break;
																end
															end
															break;
														end
													end
												end
												if (#"," == v105) then
													if (v106 == #"\\") then
														v107 = (function()
															return v21() ~= 0;
														end)();
													elseif (v106 == (2 - 0)) then
														v107 = (function()
															return v24();
														end)();
													elseif (v106 ~= #"-19") then
													else
														v107 = (function()
															return v25();
														end)();
													end
													v58[v103] = (function()
														return v107;
													end)();
													break;
												end
											end
											break;
										end
									end
								end
								v56[#"91("] = (function()
									return v21();
								end)();
								v90 = (function()
									return 343 - (218 + 123);
								end)();
							end
							if (0 ~= v90) then
							else
								v57 = (function()
									return v23();
								end)();
								v58 = (function()
									return {};
								end)();
								v90 = (function()
									return 1;
								end)();
							end
						end
						break;
					end
				end
			end
		end
	end
	local function v29(v59, v60, v61)
		local v62 = v59[1146 - (466 + 679)];
		local v63 = v59[4 - (7 - 5)];
		local v64 = v59[8 - 5];
		return function(...)
			local v67 = v62;
			local v68 = v63;
			local v69 = v64;
			local v70 = v27;
			local v71 = 3 - 2;
			local v72 = -(1901 - (106 + 1794));
			local v73 = {};
			local v74 = {...};
			local v75 = v12("#", ...) - (1 + 0 + 0);
			local v76 = {};
			local v77 = {};
			for v84 = (0 + 0) - 0, v75 do
				if ((v84 >= v69) or (4264 <= 1799)) then
					v73[v84 - v69] = v74[v84 + (90 - ((1397 - (259 + 1098)) + 49))];
				else
					v77[v84] = v74[v84 + (2 - 1)];
				end
			end
			local v78 = (v75 - v69) + (3 - 2);
			local v79;
			local v80;
			while true do
				v79 = v67[v71];
				v80 = v79[491 - (99 + 270 + 121)];
				if (v80 <= (165 - (4 + 110))) then
					if ((2708 >= 2333) and (v80 <= (609 - (57 + 527)))) then
						if ((v80 <= (1439 - (41 + 1386))) or (428 == 975)) then
							if (v80 <= 5) then
								if (v80 <= ((18 + 87) - (17 + 86))) then
									if ((v80 <= (0 + 0)) or (3051 <= 2528)) then
										v77[v79[2 + 0]] = v79[6 - 3] + v77[v79[1608 - (1032 + 33 + 539)]];
									elseif (v80 == (2 - 1)) then
										if ((v77[v79[168 - (122 + 44)]] < v79[(19 - 13) - 2]) or (2640 == 1627)) then
											v71 = v79[9 - 6];
										else
											v71 = v71 + 1 + 0;
										end
									else
										local v215 = 0 + 0;
										local v216;
										while true do
											if ((271 <= 3325) and (v215 == ((0 + 0) - (0 + 0)))) then
												v216 = nil;
												v61[v79[5 - 2]] = v77[v79[67 - (30 + 35)]];
												v71 = v71 + 1 + 0;
												v79 = v67[v71];
												v215 = 1258 - (1043 + 214);
											end
											if (v215 == (7 - 5)) then
												v71 = v71 + (1213 - (323 + 889));
												v79 = v67[v71];
												v77[v79[5 - 3]] = v79[583 - (361 + 219)];
												v71 = v71 + 1;
												v215 = (1510 - 1187) - (53 + 267);
											end
											if ((4223 > 2897) and (v215 == (2 + 2))) then
												v216 = v79[1181 - (216 + 963)];
												v77[v216] = v77[v216](v13(v77, v216 + 1 + 0, v79[(2122 - (667 + 1039)) - (15 + 398)]));
												v71 = v71 + (983 - (18 + 964));
												v79 = v67[v71];
												v215 = 18 - 13;
											end
											if ((1604 - (635 + 966)) == v215) then
												v79 = v67[v71];
												v77[v79[2 + 0]] = v79[2 + 1];
												v71 = v71 + (851 - (20 + (1849 - (274 + 745))));
												v79 = v67[v71];
												v215 = 4;
											end
											if (v215 == (1 + 0 + 0 + 0)) then
												v77[v79[1 + 1]] = {};
												v71 = v71 + (127 - (116 + (440 - (288 + 142))));
												v79 = v67[v71];
												v77[v79[(1307 - (301 + 1005)) + 1]] = v77[v79[741 - (542 + 196)]];
												v215 = 3 - 1;
											end
											if ((v215 == (2 + 4)) or (3336 < 2060)) then
												v71 = v71 + 1 + 0;
												v79 = v67[v71];
												v77[v79[1 + 1]] = v79[7 - 4];
												v71 = v71 + (2 - (1 + 0));
												v215 = 1558 - (1126 + 425);
											end
											if (v215 == (412 - (118 + 287))) then
												v79 = v67[v71];
												v216 = v79[7 - 5];
												v77[v216] = v77[v216](v13(v77, v216 + (1122 - (118 + (2435 - 1432))), v79[8 - 5]));
												break;
											end
											if (v215 == (382 - (142 + 235))) then
												v77[v79[1875 - (674 + 1199)]] = v77[v79[(6 + 0) - 3]];
												v71 = v71 + ((3 + 1) - 3);
												v79 = v67[v71];
												v77[v79[1 + 1]] = v79[(23 - 15) - 5];
												v215 = 16 - 10;
											end
										end
									end
								elseif (v80 <= (980 - (553 + 424))) then
									local v114 = 0;
									while true do
										if (v114 == (5 - 2)) then
											do
												return v77[v79[2 + 0]];
											end
											break;
										end
										if (v114 == (1 + 0)) then
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[5 - 3]] = v60[v79[(8 - 6) + 1]];
											v71 = v71 + 1 + 0;
											v114 = 2 + 0;
										end
										if (v114 == (0 - 0)) then
											v77[v79[4 - 2]] = v79[7 - 4] ^ v77[v79[12 - 8]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[1021 - (829 + 190)]] = v77[v79[6 - 3]] * v77[v79[2 + 2]];
											v114 = 4 - 3;
										end
										if ((v114 == ((148 + 607) - ((684 - (92 + 353)) + 514))) or (487 < 263)) then
											v79 = v67[v71];
											v77[v79[4 - 2]] = v77[v79[2 + 1]] % v77[v79[(1201 + 132) - (797 + 532)]];
											v71 = v71 + (2 - 1) + (0 - 0);
											v79 = v67[v71];
											v114 = 2 + 1;
										end
									end
								elseif ((v80 == (9 - 5)) or (1512 > 2516)) then
									v77[v79[1204 - (373 + 829)]] = v77[v79[616 - (520 + 93)]];
								else
									local v219;
									v77[v79[(2082 - 1349) - (476 + 255)]] = v60[v79[1133 - (369 + 761)]];
									v71 = v71 + 1 + 0 + 0;
									v79 = v67[v71];
									v77[v79[2 - 0]] = v79[10 - 7];
									v71 = v71 + (592 - (396 + 195));
									v79 = v67[v71];
									v77[v79[5 - 3]] = v79[1764 - (440 + 1321)];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v219 = v79[240 - (64 + 174)];
									v77[v219] = v77[v219](v13(v77, v219 + (1 - 0) + 0, v79[3]));
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									if ((4494 >= 4005) and (v77[v79[338 - (144 + (431 - 239))]] == v77[v79[220 - (42 + 174)]])) then
										v71 = v71 + (1348 - (641 + 706));
									else
										v71 = v79[3 + (0 - 0)];
									end
								end
							elseif (v80 <= (7 + 1)) then
								if (v80 <= (3 + 3)) then
									local v115;
									local v116, v117;
									local v118;
									local v119;
									v77[v79[(1296 + 210) - (363 + 1141)]] = v61[v79[2 + 1]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v119 = v79[7 - 5];
									v118 = v77[v79[1583 - (1183 + 397)]];
									v77[v119 + ((267 - (34 + 231)) - 1)] = v118;
									v77[v119] = v118[v79[3 + 1]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[1977 - (1913 + 62)]] = v77[v79[9 - 6]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[5 - 3]] = v79[1936 - (565 + 1368)];
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									v77[v79[1663 - (1477 + 184)]] = v79[(1325 - (930 + 387)) - 5];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v119 = v79[2 + 0];
									v116, v117 = v70(v77[v119](v13(v77, v119 + (857 - (564 + 292)), v79[4 - 1])));
									v72 = (v117 + v119) - (1 - 0);
									v115 = 483 - (397 + 86);
									for v206 = v119, v72 do
										local v207 = (0 + 0) - 0;
										while true do
											if ((v207 == (304 - (244 + 60))) or (3408 >= 3920)) then
												v115 = v115 + 1 + 0;
												v77[v206] = v116[v115];
												break;
											end
										end
									end
									v71 = v71 + (477 - (41 + 265 + 170));
									v79 = v67[v71];
									v119 = v79[1003 - (938 + 63)];
									v116, v117 = v70(v77[v119](v13(v77, v119 + 1 + 0, v72)));
									v72 = (v117 + v119) - (1 + (0 - 0));
									v115 = 0;
									for v208 = v119, v72 do
										local v209 = 1190 - (50 + 1140);
										while true do
											if ((2045 < 3473) and ((1125 - (936 + 189)) == v209)) then
												v115 = v115 + 1 + 0;
												v77[v208] = v116[v115];
												break;
											end
										end
									end
									v71 = v71 + 1;
									v79 = v67[v71];
									v119 = v79[1615 - (1565 + (745 - (389 + 308)))];
									v77[v119] = v77[v119](v13(v77, v119 + 1 + 0, v72));
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[2 + 0]]();
								elseif (v80 > ((2932 - 1787) - ((1778 - 996) + 356))) then
									if (v77[v79[269 - (176 + 91)]] ~= v79[10 - 6]) then
										v71 = v71 + (1 - 0);
									else
										v71 = v79[1095 - (975 + 117)];
									end
								else
									v77[v79[1877 - (157 + 1718)]] = v79[3 + 0] ~= (0 - 0);
								end
							elseif (v80 <= (29 - 19)) then
								if (v80 > (30 - 21)) then
									local v230;
									v77[v79[1020 - (697 + 321)]] = v60[v79[7 - 4]];
									v71 = v71 + (1 - (0 - 0));
									v79 = v67[v71];
									v77[v79[4 - 2]] = v79[2 + 1];
									v71 = v71 + ((2 + 1) - (324 - (125 + 197)));
									v79 = v67[v71];
									v77[v79[2 + 0]] = v79[5 - 2];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v230 = v79[1229 - (322 + 905)];
									v77[v230] = v77[v230](v13(v77, v230 + (612 - (602 + 9)), v79[1192 - (449 + 740)]));
									v71 = v71 + (873 - (826 + (1043 - (339 + 658))));
									v79 = v67[v71];
									v77[v79[1597 - (210 + 1385)]] = v61[v79[950 - (245 + 702)]];
									v71 = v71 + ((7 - 4) - 2);
									v79 = v67[v71];
									v77[v79[1 + 1]] = v61[v79[1901 - (260 + 1638)]];
									v71 = v71 + (441 - (382 + 58));
									v79 = v67[v71];
									v230 = v79[587 - (352 + 233)];
									v77[v230](v13(v77, v230 + (3 - 2), v79[3 + (0 - 0)]));
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[(1353 - (743 + 605)) - 3]] = v61[v79[1208 - (902 + 303)]];
									v71 = v71 + ((1 + 0) - 0);
									v79 = v67[v71];
									v77[v79[1503 - (277 + 1224)]]();
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v71 = v79[3 + 0];
								else
									v77[v79[1 + 1]][v79[1693 - (1121 + 569)]] = v77[v79[218 - (22 + 192)]];
								end
							elseif (v80 > (1 + 4 + 6)) then
								if ((v77[v79[(2561 - 1876) - ((1488 - 1005) + 200)]] < v79[1467 - (1404 + 59)]) or (855 >= 991)) then
									v71 = v71 + (2 - 1);
								else
									v71 = v79[253 - (172 + 52 + 26)];
								end
							else
								local v250 = 0 - 0;
								while true do
									if ((1365 <= 4702) and (v250 == (766 - (468 + (546 - (197 + 52)))))) then
										v77[v79[564 - (334 + (490 - 262))]] = v60[v79[1 + 2]];
										v71 = v71 + (3 - 2);
										v79 = v67[v71];
										v250 = 3 - 1;
									end
									if (v250 == (11 - 6)) then
										v71 = v79[(11 - 6) - (2 + 0)];
										break;
									end
									if ((v250 == (0 + 0)) or (219 >= 3457)) then
										v77[v79[1 + 1]] = v77[v79[239 - (141 + 95)]] % v77[v79[4 + 0]];
										v71 = v71 + (2 - (1 + 0));
										v79 = v67[v71];
										v250 = 2 - 1;
									end
									if (v250 == (450 - ((236 - 103) + 314))) then
										v77[v79[1 + 1]] = v77[v79[8 - 5]] - v77[v79[3 + 1]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v250 = 5 - 1;
									end
									if (v250 == (3 + 1)) then
										do
											return v77[v79[165 - (92 + (238 - 167))]];
										end
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v250 = 8 - 3;
									end
									if (v250 == (767 - (574 + 191))) then
										v77[v79[2 + 0]] = v77[v79[(15 - 8) - 4]] - v79[3 + 1];
										v71 = v71 + (850 - (254 + 595));
										v79 = v67[v71];
										v250 = 129 - (22 + 33 + 71);
									end
								end
							end
						elseif (v80 <= ((31 - 8) - (1102 - (97 + 1000)))) then
							if (v80 <= (1805 - (573 + 1217))) then
								if (v80 <= (17 - 4)) then
									local v137;
									v77[v79[5 - 3]] = v77[v79[1 + 2]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v137 = v79[(3350 - 2409) - (714 + 225)];
									v77[v137](v77[v137 + (2 - 1)]);
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[2]] = v61[v79[1 + 2]];
									v71 = v71 + ((1846 - (143 + 1702)) - (0 - 0));
									v79 = v67[v71];
									v77[v79[808 - (118 + (1057 - (40 + 329)))]] = v77[v79[51 - (25 + 20 + 3)]][v79[1 + 3]];
									v71 = v71 + (1887 - (324 + 603 + (1465 - 506)));
									v79 = v67[v71];
									v77[v79[3 - 1]] = v79[10 - 7];
									v71 = v71 + (733 - (16 + 716));
									v79 = v67[v71];
									v137 = v79[2];
									v77[v137](v77[v137 + (1 - 0)]);
									v71 = v71 + ((11 + 87) - (11 + 86));
									v79 = v67[v71];
									v77[v79[4 - 2]] = v79[288 - ((240 - (9 + 56)) + 110)];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v71 = v79[14 - 11];
								elseif (v80 > (1810 - (503 + 1293))) then
									v77[v79[5 - (587 - (531 + 53))]] = v79[3] * v77[v79[3 + 1]];
								elseif ((1212 == 1212) and (v79[1063 - (810 + 251)] <= v79[3 + 1])) then
									v71 = v71 + 1 + 0;
								else
									v71 = v79[3 + 0];
								end
							elseif (v80 <= (3 + 13 + 0)) then
								local v152 = v79[535 - (43 + 490)];
								local v153 = {v77[v152](v13(v77, v152 + (734 - (711 + 22)), v72))};
								local v154 = (0 + 0) - (0 + 0);
								for v210 = v152, v79[10 - 6] do
									local v211 = 0;
									while true do
										if (v211 == (0 - 0)) then
											v154 = v154 + (860 - (240 + 619));
											v77[v210] = v153[v154];
											break;
										end
									end
								end
							elseif (v80 == 17) then
								local v252;
								v77[v79[1 + 1]] = v77[v79[3]][v79[2 + 2]];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v77[v79[1 + 1]] = -v77[v79[1747 - (1344 + 400)]];
								v71 = v71 + (406 - (255 + 150));
								v79 = v67[v71];
								v77[v79[1 + 1]] = v79[13 - (16 - 6)] ^ v77[v79[4 + 0]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[8 - (5 + 1)]] = v77[v79[3]] * v77[v79[12 - 8]];
								v71 = v71 + (1740 - (344 + 60 + 1335));
								v79 = v67[v71];
								v252 = v79[9 - 7];
								v77[v252] = v77[v252](v77[v252 + (407 - ((796 - (238 + 375)) + 223))]);
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v77[v79[2 + 0]] = v77[v79[2 + 1]] + v77[v79[3 + 1]];
								v71 = v71 + (338 - (10 + 327));
								v79 = v67[v71];
								do
									return v77[v79[2 + 0 + (0 - 0)]];
								end
								v71 = v71 + (339 - (118 + 220));
								v79 = v67[v71];
								v71 = v79[1 + 2];
							else
								v77[v79[451 - (108 + 341)]] = v77[v79[2 + 1 + 0]][v79[16 - 12]];
							end
						elseif (v80 <= ((4435 - 2921) - (711 + 782))) then
							if ((v80 <= (8 + 11)) or (3586 > 3960)) then
								if (v77[v79[3 - 1]] > v77[v79[473 - (270 + 199)]]) then
									v71 = v71 + 1;
								else
									v71 = v71 + v79[1 + 2];
								end
							elseif ((v80 == (1827 - (518 + 1289))) or (4068 == 506)) then
								v71 = v79[1822 - (580 + 1239)];
							else
								local v264;
								v77[v79[5 - 3]] = v77[v79[3 + 0]];
								v71 = v71 + (2 - 1) + 0;
								v79 = v67[v71];
								v77[v79[1 + 1]] = v79[7 - (10 - 6)];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[162 - (54 + 106)]] = v79[1972 - (1618 + 351)];
								v71 = v71 + (1168 - ((1399 - 754) + 522));
								v79 = v67[v71];
								v264 = v79[2 + 0];
								v77[v264] = v77[v264](v13(v77, v264 + (1791 - (1010 + 780)), v79[3 + 0]));
								v71 = v71 + (4 - (11 - 8));
								v79 = v67[v71];
								v77[v79[5 - (3 - 0)]] = v77[v79[1839 - (1045 + 791)]];
								v71 = v71 + ((2 + 0) - 1);
								v79 = v67[v71];
								v77[v79[2 - 0]] = v79[508 - (351 + 154)];
								v71 = v71 + (1575 - (1281 + 293));
								v79 = v67[v71];
								v77[v79[268 - (3 + 25 + 238)]] = v79[(3 + 3) - 3];
								v71 = v71 + (1560 - (1381 + 178));
								v79 = v67[v71];
								v264 = v79[1 + 1];
								v77[v264] = v77[v264](v13(v77, v264 + (463 - (428 + 34)) + 0, v79[1 + 2 + 0]));
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[6 - 4]] = v77[v79[(15 - 5) - 7]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2]] = v79[(1035 - 562) - (381 + 89)];
							end
						elseif ((3331 >= 2972) and (v80 <= (21 + 2))) then
							if ((v80 > (15 + 7)) or (1492 > 2290)) then
								v77[v79[2]] = v77[v79[14 - 11]] / v79[7 - 3];
							else
								local v286 = v79[2 - 0];
								do
									return v13(v77, v286, v72);
								end
							end
						elseif (v80 == ((2827 - 1647) - ((1992 - (223 + 695)) + 82))) then
							local v287 = v79[2];
							v77[v287] = v77[v287](v77[v287 + ((3 - 2) - 0)]);
						else
							local v289 = v79[(512 - (329 + 182)) + 1];
							do
								return v77[v289](v13(v77, v289 + (1785 - (214 + 1570)), v79[1458 - (990 + 77 + 388)]));
							end
						end
					elseif (v80 <= (16 + 22)) then
						if (v80 <= ((23 - 9) + 17)) then
							if (v80 <= (1310 - (546 + 99 + 637))) then
								if (v80 <= (26 + 0)) then
									v77[v79[2 + 0]] = v77[v79[11 - 8]] % v77[v79[1730 - (1668 + 58)]];
								elseif (v80 > (653 - (512 + 114))) then
									if (v77[v79[1 + 1]] == v77[v79[10 - 6]]) then
										v71 = v71 + 1;
									else
										v71 = v79[5 - 2];
									end
								else
									local v290;
									v61[v79[10 - 7]] = v77[v79[2]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[4 - 2]] = v79[1 + 1 + 1] ~= 0;
									v71 = v71 + 1 + 0 + 0;
									v79 = v67[v71];
									v61[v79[3 + 0]] = v77[v79[6 - (8 - 4)]];
									v71 = v71 + (1995 - (109 + 1885));
									v79 = v67[v71];
									v77[v79[2]] = v61[v79[(1993 - 521) - ((2469 - (177 + 1023)) + (403 - 203))]];
									v71 = v71 + ((180 + 472) - (59 + 592));
									v79 = v67[v71];
									v77[v79[3 - 1]] = v77[v79[818 - (98 + 717)]][v79[830 - (802 + 24)]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[(4 - 2) - 0]] = v77[v79[1 + 2]][v79[4 + 0]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2]] = v77[v79[1 + 2]][v79[11 - 7]];
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									v77[v79[1 + 1]] = v61[v79[244 - (123 + 118)]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[1 + 1]] = v77[v79[(1468 - (120 + 1345)) + (337 - (8 + 329))]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v290 = v79[1 + 1];
									v77[v290](v77[v290 + (1434 - (797 + 636))]);
								end
							elseif (v80 <= (140 - 111)) then
								v77[v79[5 - 3]] = v29(v68[v79[1622 - (1427 + 192)]], nil, v61);
							elseif (v80 > (11 + (144 - (19 + 106)))) then
								local v307;
								v77[v79[(7 - 5) + 0]] = v77[v79[6 - 3]] % v79[4 + (0 - 0)];
								v71 = v71 + 1 + 0 + 0;
								v79 = v67[v71];
								v77[v79[1 + 1]] = v61[v79[1 + 2]];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[328 - (192 + 134)]] = v77[v79[1279 - (316 + 960)]][v79[7 - 3]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2 + (0 - 0)]] = v77[v79[3 + 0]] / v79[(10 - 6) + 0];
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v307 = v79[553 - (83 + 468)];
								v77[v307] = v77[v307](v77[v307 + ((6937 - 5130) - (1202 + 604))]);
								v71 = v71 + (4 - 3);
								v79 = v67[v71];
								v77[v79[2 - 0]] = v61[v79[331 - (287 + 41)]];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[(689 - 362) - (45 + 280)]] = v77[v79[1689 - (96 + 1590)]][v79[2 + 2 + 0]];
								v71 = v71 + ((3176 - (957 + 546)) - (741 + 931));
								v79 = v67[v71];
								v77[v79[2 + 0]] = v77[v79[2 + 1]] / v79[3 + 1];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v307 = v79[(12 - 9) - 1];
								v77[v307] = v77[v307](v77[v307 + ((723 + 1189) - (340 + 1571))]);
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[(3 + 8) - 8]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[1 + 1]] = v77[v79[(672 + 1103) - (1733 + 19 + 20)]];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[1036 - (125 + 909)]] = v77[v79[12 - 9]] + v77[v79[(2655 - (227 + 476)) - (1096 + (1766 - 914))]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								if (v77[v79[2 + (0 - 0)]] ~= v79[5 - (1 - 0)]) then
									v71 = v71 + 1 + 0;
								else
									v71 = v79[3 + 0];
								end
							else
								v77[v79[723 - (496 + 225)]][v79[(939 - 424) - (409 + 103)]] = v77[v79[240 - ((60 - 14) + 190)]];
								v71 = v71 + (96 - (51 + 44));
								v79 = v67[v71];
								v77[v79[(955 - (166 + 788)) + 1]] = v61[v79[1902 - (30 + 1869)]];
								v71 = v71 + (1318 - (1114 + 203));
								v79 = v67[v71];
								v77[v79[728 - ((1214 - (21 + 965)) + 498)]] = v77[v79[1 + 2]][v79[3 + (697 - (127 + 569))]];
								v71 = v71 + (664 - (174 + 489));
								v79 = v67[v71];
								v77[v79[5 - 3]] = v61[v79[1908 - (830 + 906 + 169)]];
								v71 = v71 + (525 - (303 + 221));
								v79 = v67[v71];
								v77[v79[(411 + 860) - (231 + 1038)]] = v77[v79[3 + 0]][v79[83 - (32 + 47)]];
								v71 = v71 + (1978 - (1053 + 924));
								v79 = v67[v71];
								v77[v79[1164 - (171 + 991)]] = v61[v79[3 + 0]];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v77[v79[8 - 6]] = v77[v79[7 - 4]][v79[9 - 5]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[6 - 4]] = v61[v79[8 - 5]];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								if not v77[v79[6 - 4]] then
									v71 = v71 + (1249 - (111 + 1137));
								else
									v71 = v79[161 - (91 + 67)];
								end
							end
						elseif (v80 <= (8 + 26)) then
							if (v80 <= ((35 + 60) - 63)) then
								local v157;
								v77[v79[1397 - (665 + 730)]] = v77[v79[1 + 2]][v79[527 - (423 + 100)]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[5 - 3]] = -v77[v79[8 - 5]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[773 - (326 + 445)]] = v79[13 - 10] ^ v77[v79[(11 - 3) - 4]];
								v71 = v71 + (1882 - (22 + 1859));
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[6 - 3]] * v77[v79[715 - (530 + 181)]];
								v71 = v71 + (882 - (398 + 216 + 267));
								v79 = v67[v71];
								v157 = v79[779 - (55 + 722)];
								do
									return v77[v157](v13(v77, v157 + (33 - (19 + 13)), v79[4 - (2 - 1)]));
								end
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v157 = v79[5 - 3];
								do
									return v13(v77, v157, v72);
								end
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v71 = v79[1 + 2];
							elseif (v80 == (57 - 24)) then
								v77[v79[3 - 1]] = -v77[v79[3 + 0]];
							else
								v77[v79[1814 - (1293 + 519)]] = v79[5 - 2] ^ v77[v79[9 - 5]];
							end
						elseif ((1163 <= 3508) and (v80 <= (68 - 32))) then
							if (v80 == (121 - 86)) then
								local v346;
								v77[v79[4 - 2]] = v77[v79[3]] % v79[2 + 2];
								v71 = v71 + (4 - 3);
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[6 - 3]];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[3 - 1]] = v61[v79[2 + 1 + 0]];
								v71 = v71 + 1 + 0 + 0;
								v79 = v67[v71];
								v77[v79[2 - (1292 - (1162 + 130))]] = v77[v79[5 - 2]][v79[9 - 5]];
								v71 = v71 + 1 + 0 + 0;
								v79 = v67[v71];
								v77[v79[2 + (0 - 0)]] = v77[v79[1 + 2]] / v79[3 + 1];
								v71 = v71 + 1;
								v79 = v67[v71];
								v346 = v79[(2034 - (889 + 47)) - (709 + 387)];
								v77[v346] = v77[v346](v77[v346 + ((1218 + 641) - ((1937 - (1153 + 111)) + 1185))]);
								v71 = v71 + (87 - (7 + (103 - 24)));
								v79 = v67[v71];
								v77[v79[1 + 0 + 1]] = v61[v79[(5 + 3) - 5]];
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v77[v79[2 - (0 + 0)]] = v77[v79[3 + 0]][v79[3 + 1]];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v77[v79[1 + 1]] = v77[v79[5 - 2]] / v79[7 - 3];
								v71 = v71 + (1881 - (446 + 1434));
								v79 = v67[v71];
								v346 = v79[1285 - (1040 + 243)];
								v77[v346] = v77[v346](v77[v346 + 1]);
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[1849 - (262 + 297 + 1288)]] = v77[v79[1934 - (82 + 527 + 1322)]];
								v71 = v71 + (455 - (13 + 441));
								v79 = v67[v71];
								v77[v79[7 - 5]] = v77[v79[1 + 2]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[5 - 3]] = v79[14 - 11];
							else
								local v370;
								local v371, v372;
								local v373;
								local v374;
								v77[v79[1 + 1]] = v60[v79[3]];
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v77[v79[1 + 1]] = v79[592 - ((519 - 243) + 313)];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[2]] = v79[2 + 1];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v374 = v79[2 + 0];
								v77[v374] = v77[v374](v13(v77, v374 + (1 - 0), v79[2 + 0 + 1]));
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2 + 0]][v79[3 + (96 - (23 + 73))]] = v77[v79[4 + 0]];
								v71 = v71 + (434 - (153 + 280));
								v79 = v67[v71];
								v77[v79[5 - 3]] = {};
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2 + 0]] = v60[v79[2 + 1]];
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v77[v79[2]] = v79[2 + 1];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[499 - (322 + 175)]] = v79[(288 - (26 + 259)) + 0 + 0];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v374 = v79[2 - 0];
								v77[v374] = v77[v374](v13(v77, v374 + 1 + (0 - 0), v79[670 - ((311 - 222) + 578)]));
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2]] = v60[v79[1 + 2]];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v77[v79[1051 - (572 + 477)]] = v79[3];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2 + 0]] = v79[1 + 2];
								v71 = v71 + ((1716 - (1094 + 535)) - (84 + 2));
								v79 = v67[v71];
								v374 = v79[2 - 0];
								v77[v374] = v77[v374](v13(v77, v374 + 1 + 0, v79[845 - (497 + 345)]));
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[1 + 1]][v77[v79[1336 - (605 + 728)]]] = v77[v79[18 - 14]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[3 - 1]][v79[(119 + 920) - (562 + 474)]] = v77[v79[9 - 5]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[7 - 5]] = v77[v79[3 + 0]];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[3 - 1]] = v61[v79[3 + 0]];
								v71 = v71 + (490 - (457 + (1908 - (1554 + 322))));
								v79 = v67[v71];
								v374 = v79[1 + 1];
								v373 = v77[v79[(2830 - (989 + 436)) - (832 + 570)]];
								v77[v374 + 1 + 0] = v373;
								v77[v374] = v373[v79[2 + 2]];
								v71 = v71 + (3 - (1180 - (816 + 362)));
								v79 = v67[v71];
								v77[v79[7 - 5]] = v60[v79[(651 - 311) - (258 + 79)]];
								v71 = v71 + (2 - 1) + 0;
								v79 = v67[v71];
								v77[v79[798 - (588 + 208)]] = v79[8 - 5];
								v71 = v71 + (1801 - ((3259 - 2375) + 916));
								v79 = v67[v71];
								v77[v79[3 - 1]] = v79[1674 - (1231 + 440)];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v374 = v79[2];
								v371, v372 = v70(v77[v374](v13(v77, v374 + (59 - (34 + (43 - 19))), v79[2 + 1])));
								v72 = (v372 + v374) - (1 - 0);
								v370 = 653 - (232 + 421);
								for v707 = v374, v72 do
									v370 = v370 + 1;
									v77[v707] = v371[v370];
								end
								v71 = v71 + (1890 - (1569 + 320));
								v79 = v67[v71];
								v374 = v79[1 + 1];
								v77[v374] = v77[v374](v13(v77, v374 + 1 + 0, v72));
								v71 = v71 + ((6 - 3) - 2);
								v79 = v67[v71];
								v77[v79[607 - (316 + 289)]] = v77[v79[3]][v79[10 - 6]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[1591 - (877 + 712)]] = v77[v79[2 + 1]][v79[1457 - ((2928 - 2262) + 787)]];
								v71 = v71 + (426 - (360 + 65));
								v79 = v67[v71];
								v77[v79[2 + 0]] = v77[v79[257 - (79 + 175)]][v79[5 - 1]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v374 = v79[2 + 0];
								v373 = v77[v79[8 - 5]];
								v77[v374 + (1 - (0 + 0))] = v373;
								v77[v374] = v373[v79[1 + 3]];
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v77[v79[901 - (503 + 396)]] = v61[v79[3 + (763 - (86 + 677))]];
								v71 = v71 + (182 - (92 + 89));
								v79 = v67[v71];
								v77[v79[3 - 1]] = v77[v79[5 - 2]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v374 = v79[1286 - (299 + 985)];
								v371, v372 = v70(v77[v374](v77[v374 + 1 + 0 + 0]));
								v72 = (v372 + v374) - (1 + 0 + 0);
								v370 = 0 - 0;
								for v710 = v374, v72 do
									v370 = v370 + 1;
									v77[v710] = v371[v370];
								end
								v71 = v71 + 1 + (1026 - (263 + 763));
								v79 = v67[v71];
								v374 = v79[4 - 2];
								v77[v374](v13(v77, v374 + 1, v72));
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v71 = v79[3];
							end
						elseif ((v80 == (18 + 19)) or (2465 == 2663)) then
							local v425;
							v77[v79[5 - 3]] = v77[v79[1 + 2]][v79[5 - 1]];
							v71 = v71 + (1245 - (485 + 759));
							v79 = v67[v71];
							v77[v79[4 - 2]] = v77[v79[1192 - (442 + 747)]];
							v71 = v71 + (1136 - (832 + 303));
							v79 = v67[v71];
							v425 = v79[948 - (42 + 46 + 858)];
							v77[v425] = v77[v425](v77[v425 + ((2254 - (649 + 209)) - (440 + 955))]);
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2 + 0]] = v60[v79[3 + 0]];
							v71 = v71 + 1 + (0 - 0);
							v79 = v67[v71];
							if (v77[v79[2]] <= v77[v79[9 - 5]]) then
								v71 = v71 + (790 - (766 + (754 - (643 + 88))));
							else
								v71 = v79[(2125 - (54 + 1715)) - (260 + 93)];
							end
						else
							local v435;
							v77[v79[(35 - 26) - 7]]();
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[2 - 0]] = v61[v79[7 - 4]];
							v71 = v71 + (3 - 2);
							v79 = v67[v71];
							v77[v79[1075 - (1036 + 37)]] = v77[v79[3 + 0]][v79[7 - 3]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[1482 - (641 + 839)]] = v61[v79[916 - (910 + (8 - 5))]];
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[4 - 2]] = v77[v79[1687 - (1466 + (444 - 226))]][v79[2 + 2]];
							v71 = v71 + ((923 + 226) - (556 + 592));
							v79 = v67[v71];
							v435 = v79[1 + 0 + 1];
							v77[v435](v13(v77, v435 + (809 - (329 + 479)), v79[857 - ((659 - 485) + 680)]));
							v71 = v71 + (3 - 2);
							v79 = v67[v71];
							v77[v79[5 - (1386 - (132 + 1251))]] = v79[5 - 2];
						end
					elseif ((1211 <= 2088) and (v80 <= (383 - (163 + 176)))) then
						if ((v80 <= (30 + 11)) or (3099 < 2736)) then
							if (v80 <= (778 - (396 + 343))) then
								v77[v79[1 + 1]] = v77[v79[1480 - (29 + 0 + 1448)]] % v77[v79[1393 - (135 + 1254)]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[7 - 5]] = v60[v79[3 + 0]];
								v71 = v71 + (4 - 3);
								v79 = v67[v71];
								v77[v79[2 + 0]] = v77[v79[1 + 2]] % v77[v79[1531 - (389 + 1138)]];
								v71 = v71 + (575 - (102 + 472));
								v79 = v67[v71];
								v77[v79[2 + 0]] = v77[v79[2 + 1]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[1547 - ((792 - 472) + 949 + 276)]] = v79[5 - 2];
								v71 = v71 + (459 - (185 + 273)) + 0;
								v79 = v67[v71];
								v71 = v79[3];
							elseif (v80 == (1504 - (39 + 118 + 1307))) then
								v77[v79[1861 - (821 + 1038)]] = v77[v79[7 - 4]] * v77[v79[1 + 3]];
							elseif (v77[v79[3 - 1]] == v79[1950 - (706 + 1240)]) then
								v71 = v71 + (259 - (81 + 177));
							else
								v71 = v79[2 + 1];
							end
						elseif (v80 <= (299 - (212 + 45))) then
							local v176 = 0 - 0;
							local v177;
							local v178;
							local v179;
							while true do
								if (v176 == (1032 - (834 + 192))) then
									if (v177 > ((5587 - 3641) - (708 + 1238))) then
										if (v178 > v77[v179 + 1 + 0 + 0]) then
											v71 = v79[1 + 2];
										else
											v77[v179 + 1 + 2] = v178;
										end
									elseif (v178 < v77[v179 + (1668 - (586 + 1081))]) then
										v71 = v79[1 + 2];
									else
										v77[v179 + (4 - 1)] = v178;
									end
									break;
								end
								if (v176 == (307 - (300 + 4))) then
									v77[v79[1 + 1]] = #v77[v79[3]];
									v71 = v71 + ((1226 - (361 + 863)) - 1);
									v79 = v67[v71];
									v176 = 366 - (112 + (681 - 431));
								end
								if (v176 == 0) then
									v177 = nil;
									v178 = nil;
									v179 = nil;
									v176 = 1 + 0;
								end
								if (v176 == (2 + 0)) then
									v77[v79[4 - 2]] = v79[2 + 1];
									v71 = v71 + 1;
									v79 = v67[v71];
									v176 = 1330 - (443 + 884);
								end
								if ((v176 == (3 + 2)) or (210 >= 2468)) then
									v179 = v79[2 + 0];
									v178 = v77[v179];
									v177 = v77[v179 + (1282 - (883 + (950 - 553)))];
									v176 = 596 - (563 + 6 + 21);
								end
								if (v176 == (1 + 0)) then
									v77[v79[2 + 0]] = v77[v79[1490 - (85 + 1402)]];
									v71 = v71 + (1415 - (1001 + 413));
									v79 = v67[v71];
									v176 = 4 - 2;
								end
								if ((8 - 4) == v176) then
									v77[v79[2 - 0]] = v79[220 - (12 + 205)];
									v71 = v71 + (883 - (244 + 638));
									v79 = v67[v71];
									v176 = 5;
								end
							end
						elseif (v80 == (736 - (627 + 66))) then
							if ((v79[5 - 3] <= v77[v79[388 - (27 + 357)]]) or (4487 < 4206)) then
								v71 = v71 + (603 - (512 + 90));
							else
								v71 = v79[1909 - (1665 + 241)];
							end
						else
							local v449 = 717 - (373 + 344);
							local v450;
							while true do
								if (v449 == 1) then
									v77[v79[1 + 1]] = v77[v79[3]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v450 = v79[(4 + 1) - 3];
									v449 = 2 - 0;
								end
								if (v449 == (1099 - (35 + 1064))) then
									v450 = nil;
									v77[v79[2 + 0]] = v77[v79[6 - 3]][v79[4]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v449 = 1295 - (919 + 375);
								end
								if (v449 == (1239 - (298 + 678 + 260))) then
									v71 = v71 + (1260 - ((546 - 313) + 1026));
									v79 = v67[v71];
									if ((v77[v79[1668 - (636 + 1030)]] > v77[v79[3 + 1]]) or (4604 == 16)) then
										v71 = v71 + 1 + (747 - (16 + 731));
									else
										v71 = v71 + v79[3 + 0];
									end
									break;
								end
								if (v449 == (1 + 1)) then
									v77[v450] = v77[v450](v77[v450 + 1 + 0]);
									v71 = v71 + (222 - (55 + 166));
									v79 = v67[v71];
									v77[v79[1 + 0 + 1]] = v60[v79[1 + 2 + 0]];
									v449 = 112 - (74 + 22 + 13);
								end
							end
						end
					elseif ((v80 <= (1968 - (962 + 959))) or (410 == 611)) then
						if (v80 <= (171 - 126)) then
							local v180 = v79[299 - ((796 - (527 + 233)) + 261)];
							v77[v180](v77[v180 + (1352 - (461 + 890))]);
						elseif ((255 < 284) and (v80 == (79 - 33))) then
							if not v77[v79[1370 - (34 + 1334)]] then
								v71 = v71 + 1 + 0;
							else
								v71 = v79[3 + 0 + 0];
							end
						else
							local v451;
							local v452;
							local v453;
							v77[v79[1285 - (1035 + 248)]] = v60[v79[3]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2]] = v77[v79[201 - (37 + 161)]] % v77[v79[25 - (20 + 1)]];
							v71 = v71 + 1 + (0 - 0);
							v79 = v67[v71];
							v77[v79[321 - (134 + 185)]] = v60[v79[1136 - (549 + 584)]];
							v71 = v71 + (686 - (314 + 371));
							v79 = v67[v71];
							v77[v79[2 + 0]] = v77[v79[(9 + 1) - 7]] % v77[v79[972 - (478 + 490)]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2 + 0]] = v77[v79[1175 - (786 + 386)]];
							v71 = v71 + (686 - ((2160 - (1107 + 678)) + 310));
							v79 = v67[v71];
							v77[v79[6 - (4 + 0)]] = v79[3 + 0];
							v71 = v71 + (1380 - (1055 + 324));
							v79 = v67[v71];
							v77[v79[1342 - (1093 + 247)]] = v79[3 + 0];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[7 - 5]] = v79[9 - 6];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[4 - 2]] = v60[v79[2 + 1]];
							v71 = v71 + (3 - 2);
							v79 = v67[v71];
							v77[v79[6 - 4]] = v79[3 + 0];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v453 = v79[2];
							v452 = v77[v453];
							v451 = v77[v453 + 2];
							if ((3624 == 3624) and (v451 > (688 - (364 + 324)))) then
								if (v452 > v77[v453 + 1 + 0]) then
									v71 = v79[7 - 4];
								else
									v77[v453 + (6 - 3)] = v452;
								end
							elseif ((v452 < v77[v453 + (51 - (4 + 46)) + 0]) or (775 < 686)) then
								v71 = v79[12 - 9];
							else
								v77[v453 + (4 - 1)] = v452;
							end
						end
					elseif (v80 <= (148 - 99)) then
						if (v80 > ((4961 - 3645) - (1249 + 19))) then
							local v473 = v79[6 - 4];
							v77[v473](v13(v77, v473 + 1 + 0, v72));
						else
							v77[v79[7 - 5]]();
						end
					elseif ((v80 == (1136 - (686 + 400))) or (3814 <= 975)) then
						local v474 = v79[2 + 0];
						local v475, v476 = v70(v77[v474](v77[v474 + (230 - (73 + 156))]));
						v72 = (v476 + v474) - (1 + 0);
						local v477 = 0 + 0;
						for v727 = v474, v72 do
							local v728 = 0 + (0 - 0);
							while true do
								if (v728 == (811 - (477 + 244 + (190 - 100)))) then
									v477 = v477 + 1 + 0;
									v77[v727] = v475[v477];
									break;
								end
							end
						end
					else
						local v478 = 0 - 0;
						local v479;
						local v480;
						local v481;
						local v482;
						local v483;
						while true do
							if ((v478 == (476 - (224 + (393 - 147)))) or (1956 <= 178)) then
								v77[v79[(1397 - (1262 + 134)) + 1]] = v77[v79[4 - 1]][v79[6 - 2]];
								v71 = v71 + (969 - (493 + (1173 - 698)));
								v79 = v67[v71];
								v77[v79[1 + 1]] = v77[v79[1 + 2]][v79[3 + 1]];
								v71 = v71 + (1 - 0);
								v478 = 7;
							end
							if (v478 == (3 - 2)) then
								v482 = v77[v79[(129 + 387) - (203 + 310)]];
								v77[v483 + (1994 - (1238 + 755))] = v482;
								v77[v483] = v482[v79[1 + 3]];
								v71 = v71 + (1535 - (709 + 825));
								v79 = v67[v71];
								v478 = 3 - 1;
							end
							if (v478 == (962 - (114 + 845))) then
								v79 = v67[v71];
								v77[v79[2 - 0]] = v79[867 - (196 + 668)];
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v483 = v79[3 - 1];
								v478 = 837 - (171 + 662);
							end
							if ((1657 <= 3112) and (v478 == (101 - (3 + 1 + 89)))) then
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v61[v79[798 - (383 + 412)]] = v77[v79[1 + 0 + 1]];
								v71 = v71 + (4 - 3);
								v79 = v67[v71];
								v478 = 4 + 5;
							end
							if (v478 == (1491 - (35 + 1451))) then
								v79 = v67[v71];
								v483 = v79[1455 - (28 + 104 + 1321)];
								v77[v483] = v77[v483](v13(v77, v483 + (1994 - (941 + 1052)), v72));
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v478 = 1520 - (822 + 692);
							end
							if (v478 == (9 - 2)) then
								v79 = v67[v71];
								v77[v79[1 + 1]] = v77[v79[300 - (45 + 252)]][v79[4 + 0]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[4 - 2]] = v77[v79[436 - (114 + 319)]][v79[2 + 2]];
								v478 = 8;
							end
							if ((v478 == (0 - 0)) or (389 >= 816)) then
								v479 = nil;
								v480, v481 = nil;
								v482 = nil;
								v483 = nil;
								v483 = v79[2 - 0];
								v478 = 1 + 0 + 0;
							end
							if (v478 == (3 + 1)) then
								v480, v481 = v70(v77[v483](v13(v77, v483 + ((468 + 953) - (1004 + 409 + 7)), v79[4 - 1])));
								v72 = (v481 + v483) - (1 - 0);
								v479 = 1963 - (556 + 1407);
								for v1156 = v483, v72 do
									v479 = v479 + ((1656 - 449) - (741 + 465));
									v77[v1156] = v480[v479];
								end
								v71 = v71 + ((401 + 65) - (170 + 295));
								v478 = 3 + (5 - 3);
							end
							if (v478 == ((34 - 8) - 17)) then
								v77[v79[(5 - 3) + 0]] = v61[v79[7 - 4]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								if (v79[2 + 0] < v77[v79[3 + 1]]) then
									v71 = v71 + 1 + 0;
								else
									v71 = v79[1233 - (957 + 273)];
								end
								break;
							end
							if ((3034 > 2266) and (v478 == (1 + 1))) then
								v77[v79[1 + 1]] = v60[v79[11 - 8]];
								v71 = v71 + ((1 + 1) - 1);
								v79 = v67[v71];
								v77[v79[5 - 3]] = v79[14 - 11];
								v71 = v71 + (1781 - (389 + 1391));
								v478 = 2 + 1;
							end
						end
					end
				elseif ((916 <= 1710) and (v80 <= (9 + 68))) then
					if (v80 <= (145 - 81)) then
						if (v80 <= (1008 - (783 + 168))) then
							if (v80 <= (181 - 127)) then
								if (v80 <= (1456 - (1257 + 147))) then
									v77[v79[2 + (707 - (667 + 40))]] = v77[v79[314 - (309 + 2)]] % v79[(1322 - (436 + 874)) - 8];
								elseif (v80 > (1265 - (1090 + 122))) then
									for v729 = v79[1 + 1], v79[9 - (1612 - (762 + 844))] do
										v77[v729] = nil;
									end
								else
									local v484 = v79[2 + 0];
									local v485 = v79[1122 - (628 + 490)];
									local v486 = v484 + 1 + 1;
									local v487 = {v77[v484](v77[v484 + (2 - 1)], v77[v486])};
									for v731 = 4 - (4 - 1), v485 do
										v77[v486 + v731] = v487[v731];
									end
									local v488 = v487[775 - (431 + 343)];
									if v488 then
										v77[v486] = v488;
										v71 = v79[5 - 2];
									else
										v71 = v71 + (2 - 1);
									end
								end
							elseif (v80 <= ((111 - 62) + 6)) then
								if (v79[1943 - (816 + 1125)] < v77[v79[4 + 0]]) then
									v71 = v71 + 1 + 0;
								else
									v71 = v79[1698 - (556 + 1139)];
								end
							elseif (v80 == ((1 + 96) - (5 + 36))) then
								v77[v79[17 - (6 + 9)]] = v79[1 + 2];
							else
								local v492 = v79[2 + 0];
								local v493, v494 = v70(v77[v492](v13(v77, v492 + (170 - (28 + (617 - (209 + 267)))), v79[3 + 0])));
								v72 = (v494 + v492) - (1 + 0);
								local v495 = 0 + 0;
								for v734 = v492, v72 do
									local v735 = 0;
									while true do
										if (v735 == (0 - 0)) then
											v495 = v495 + 1;
											v77[v734] = v493[v495];
											break;
										end
									end
								end
							end
						elseif ((v80 <= (54 + 6)) or (1646 == 3299)) then
							if ((v80 <= (42 + 16)) or (25 == 1176)) then
								local v182 = (0 - 0) - (0 - 0);
								local v183;
								local v184;
								local v185;
								local v186;
								local v187;
								while true do
									if (v182 == (1323 - ((2197 - (1611 + 100)) + 831))) then
										v77[v187] = v77[v187](v13(v77, v187 + (2 - 1), v72));
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v61[v79[10 - 7]] = v77[v79[1 + 1]];
										break;
									end
									if (v182 == ((529 + 170) - (335 + 362))) then
										v77[v187] = v186[v79[12 - 8]];
										v71 = v71 + (1264 - ((1452 - (14 + 770)) + (2379 - (1165 + 619))));
										v79 = v67[v71];
										v77[v79[5 - 3]] = v77[v79[(17 - 6) - 8]];
										v71 = v71 + 1;
										v182 = 3 + 0;
									end
									if ((0 + 0) == v182) then
										v183 = nil;
										v184, v185 = nil;
										v186 = nil;
										v187 = nil;
										v77[v79[5 - 3]] = v61[v79[293 - (23 + (648 - (229 + 152)))]];
										v182 = 1945 - (1129 + 815);
									end
									if (v182 == (4 + 1)) then
										v183 = 387 - (371 + (210 - (107 + 87)));
										for v812 = v187, v72 do
											v183 = v183 + (1751 - (1326 + 424));
											v77[v812] = v184[v183];
										end
										v71 = v71 + (3 - 2);
										v79 = v67[v71];
										v187 = v79[3 - 1];
										v182 = 21 - 15;
									end
									if (v182 == (122 - (88 + 30))) then
										v71 = v71 + (772 - ((1308 - 588) + 51));
										v79 = v67[v71];
										v187 = v79[4 - 2];
										v184, v185 = v70(v77[v187](v13(v77, v187 + (1777 - (421 + 1355)), v79[3 - 0])));
										v72 = (v185 + v187) - (1 - (0 + 0));
										v182 = 3 + 2 + 0;
									end
									if ((v182 == (1084 - (286 + (3805 - 3008)))) or (1842 <= 1070)) then
										v71 = v71 + (3 - 2);
										v79 = v67[v71];
										v187 = v79[2 + 0];
										v186 = v77[v79[3]];
										v77[v187 + (1 - 0)] = v186;
										v182 = 441 - (397 + 42);
									end
									if ((v182 == (1 + 2)) or (4092 <= 738)) then
										v79 = v67[v71];
										v77[v79[802 - (24 + 776)]] = v79[7 - 4];
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v77[v79[2]] = v79[788 - (222 + 563)];
										v182 = 8 - (15 - 11);
									end
								end
							elseif ((v80 == (43 + 16)) or (2943 > 3317)) then
								local v496 = v79[192 - (23 + 167)];
								local v497 = v77[v496];
								for v760 = v496 + 1, v72 do
									v7(v497, v77[v760]);
								end
							else
								v77[v79[1800 - (690 + 1108)]] = v77[v79[2 + 0 + 1]] - v79[4 + (14 - (13 + 1))];
							end
						elseif ((3065 < 3261) and (v80 <= (910 - (40 + 808)))) then
							if ((v80 > (1039 - (194 + 784))) or (1786 >= 2196)) then
								local v499 = 0 + 0;
								local v500;
								while true do
									if (v499 == (0 - 0)) then
										v500 = nil;
										v77[v79[2 + 0]] = v61[v79[3 + 0]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v499 = 1 + 0;
									end
									if (v499 == 2) then
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v500 = v79[2 + 0];
										v77[v500] = v77[v500](v77[v500 + (572 - (47 + 524))]);
										v499 = 2 + 1;
									end
									if ((3 + 0) == v499) then
										v71 = v71 + ((2 + 0) - 1);
										v79 = v67[v71];
										v77[v79[2 + 0]] = v60[v79[4 - 1]];
										v71 = v71 + 1;
										v499 = 8 - 4;
									end
									if ((v499 == (1727 - ((2223 - (987 + 71)) + 561))) or (1778 > 3742)) then
										v77[v79[1 + 1]] = v77[v79[1 + 2]][v79[589 - (217 + 368)]];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[6 - 4]] = v77[v79[2 + 1]];
										v499 = 481 - ((438 - 97) + 138);
									end
									if ((2 + 2) == v499) then
										v79 = v67[v71];
										if ((2241 >= 904) and (v77[v79[3 - 1]] > v77[v79[330 - (89 + 237)]])) then
											v71 = v71 + (3 - 2);
										else
											v71 = v71 + v79[6 - 3];
										end
										break;
									end
								end
							else
								local v501;
								v77[v79[286 - (242 + 42)]] = v77[v79[884 - (581 + 300)]] % v79[9 - 5];
								v71 = v71 + (1221 - (855 + 365));
								v79 = v67[v71];
								v77[v79[4 - 2]] = v77[v79[1 + 2]];
								v71 = v71 + (1236 - (1030 + 205));
								v79 = v67[v71];
								v77[v79[2 + 0]] = v61[v79[3 + 0]];
								v71 = v71 + (287 - (156 + 130));
								v79 = v67[v71];
								v77[v79[4 - 2]] = v77[v79[4 - (700 - (514 + 185))]][v79[7 - 3]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2 + 0]] = v77[v79[7 - 4]] / v79[73 - (10 + 59)];
								v71 = v71 + 1 + 0 + 0;
								v79 = v67[v71];
								v501 = v79[9 - 7];
								v77[v501] = v77[v501](v77[v501 + (1 - 0)]);
								v71 = v71 + (477 - (296 + 180));
								v79 = v67[v71];
								v77[v79[1405 - (1183 + 220)]] = v61[v79[1166 - (671 + 492)]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2 - 0]] = v77[v79[3 + 0]][v79[13 - 9]];
								v71 = v71 + (735 - (527 + 207));
								v79 = v67[v71];
								v77[v79[1217 - (369 + 846)]] = v77[v79[1873 - ((4993 - 3695) + 572)]] / v79[9 - 5];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v501 = v79[2 + 0];
								v77[v501] = v77[v501](v77[v501 + (1946 - (1036 + 909))]);
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2 - 0]] = v77[v79[206 - ((1515 - (771 + 733)) + 192)]];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[2 + 0]] = v77[v79[178 - (135 + 40)]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[9 - 7]] = v79[6 - 3];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v71 = v79[2 + 1];
							end
						elseif (v80 == (24 + 39)) then
							local v522 = v79[4 - 2];
							do
								return v13(v77, v522, v522 + v79[4 - 1]);
							end
						else
							local v523 = v79[178 - (50 + 126)];
							v77[v523](v13(v77, v523 + (2 - 1), v79[1 + 2]));
						end
					elseif ((v80 <= (1483 - ((2487 - 1254) + 180))) or (1273 >= 3110)) then
						if ((v80 <= (1036 - (522 + (965 - 518)))) or (4284 < 464)) then
							if ((4545 > 238) and (v80 <= (1486 - (107 + (2481 - (407 + 760)))))) then
								local v188 = 0 + 0;
								local v189;
								local v190;
								local v191;
								while true do
									if (v188 == (2 - 1)) then
										v191 = 0;
										for v815 = v189, v79[2 + 0 + 2] do
											v191 = v191 + ((1 + 0) - 0);
											v77[v815] = v190[v191];
										end
										break;
									end
									if ((607 < 4327) and ((0 - 0) == v188)) then
										v189 = v79[(1453 + 459) - (716 + 1194)];
										v190 = {v77[v189](v77[v189 + 1 + 0])};
										v188 = 504 - (74 + 429);
									end
								end
							elseif (v80 == (127 - 61)) then
								local v524 = 0 + 0;
								local v525;
								local v526;
								local v527;
								local v528;
								local v529;
								while true do
									if ((v524 == (253 - ((1861 - (169 + 1685)) + 227))) or (3800 <= 893)) then
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v529 = v79[2 + 0];
										v528 = v77[v79[8 - 5]];
										v77[v529 + (2 - 1)] = v528;
										v77[v529] = v528[v79[437 - (279 + 154)]];
										v71 = v71 + (779 - (454 + 324));
										v79 = v67[v71];
										v524 = 16 + 4;
									end
									if ((910 < 3460) and (((4 + 17) - ((403 - (41 + 350)) + 5)) == v524)) then
										v529 = v79[2 + 0];
										v77[v529] = v77[v529](v13(v77, v529 + (2 - 1), v79[2 + 1]));
										v71 = v71 + (1094 - (277 + 816));
										v79 = v67[v71];
										v77[v79[(21 - 13) - 6]] = v60[v79[1186 - (1058 + 125)]];
										v71 = v71 + ((2 - 1) - 0);
										v79 = v67[v71];
										v77[v79[1 + 1]] = v79[3];
										v524 = 980 - (815 + 160);
									end
									if (v524 == (21 - 16)) then
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[(4 - 3) + (2 - 1)]] = v79[2 + 1];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v529 = v79[1900 - (41 + 1857)];
										v77[v529] = v77[v529](v13(v77, v529 + (1894 - (1222 + 671)), v79[7 - 4]));
										v71 = v71 + (1 - 0);
										v524 = 1188 - (229 + 605 + 348);
									end
									if ((2175 == 2175) and (v524 == (1789 - (1111 + 663)))) then
										v528 = v77[v79[1582 - ((1761 - (790 + 97)) + 705)]];
										v77[v529 + 1 + 0] = v528;
										v77[v529] = v528[v79[1 + 3]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[3 - 1]] = v60[v79[1 + 2]];
										v71 = v71 + (267 - (38 + 228));
										v79 = v67[v71];
										v524 = 695 - (642 + 37);
									end
									if ((3 + 7) == v524) then
										v79 = v67[v71];
										v77[v79[2]] = v60[v79[1 + 2]];
										v71 = v71 + ((8 - 6) - 1);
										v79 = v67[v71];
										v77[v79[456 - (233 + 221)]] = v79[3 + 0];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[4 - 2]] = v79[3 + 0];
										v524 = 1552 - (718 + 823);
									end
									if ((v524 == (2 + 1)) or (1003 > 1556)) then
										v71 = v71 + (806 - (266 + 539));
										v79 = v67[v71];
										v77[v79[5 - 3]] = v79[(345 + 839) - (1035 + 146)];
										v71 = v71 + (1226 - (636 + 589));
										v79 = v67[v71];
										v77[v79[(2 + 2) - 2]] = v79[5 - (247 - (235 + 10))];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v524 = 2 + 2;
									end
									if (v524 == (1024 - (657 + 358))) then
										v71 = v71 + (1115 - (53 + 715 + 346));
										v79 = v67[v71];
										v529 = v79[4 - 2];
										v77[v529] = v77[v529](v13(v77, v529 + (2 - 1), v79[1190 - (1151 + 36)]));
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[1 + 1]][v77[v79[8 - 5]]] = v77[v79[4]];
										v71 = v71 + (1833 - (1552 + (560 - 280)));
										v524 = (2027 - (887 + 296)) - (64 + 770);
									end
									if (v524 == (6 + 2)) then
										v79 = v67[v71];
										v77[v79[4 - 2]] = v60[v79[1 + (1047 - (512 + 533))]];
										v71 = v71 + (1244 - (157 + 1086));
										v79 = v67[v71];
										v77[v79[2]] = v79[(1429 - (662 + 762)) - 2];
										v71 = v71 + (4 - 3);
										v79 = v67[v71];
										v77[v79[2 + 0]] = v79[3 - 0];
										v524 = 11 - 2;
									end
									if ((3693 == 3693) and ((836 - (599 + 220)) == v524)) then
										v72 = (v527 + v529) - (1 - 0);
										v525 = 1931 - (1813 + 118);
										for v1161 = v529, v72 do
											v525 = v525 + (678 - (334 + 343)) + 0;
											v77[v1161] = v526[v525];
										end
										v71 = v71 + (1218 - (841 + 376));
										v79 = v67[v71];
										v529 = v79[2];
										v77[v529] = v77[v529](v13(v77, v529 + 1, v72));
										v71 = v71 + (1 - 0);
										v524 = 5 + 13;
									end
									if ((v524 == (29 - 18)) or (655 > 1501)) then
										v71 = v71 + 1 + (0 - 0);
										v79 = v67[v71];
										v529 = v79[491 - (198 + 291)];
										v77[v529] = v77[v529](v13(v77, v529 + (860 - (464 + 395)), v79[3 + 0]));
										v71 = v71 + (1688 - (1502 + 185));
										v79 = v67[v71];
										v77[v79[2]] = v60[v79[7 - 4]];
										v71 = v71 + 1 + 0;
										v524 = 849 - (13 + 454 + 370);
									end
									if ((1721 < 1809) and (v524 == (32 - 16))) then
										v77[v79[2 + 0]] = v79[10 - 7];
										v71 = v71 + 1 + (574 - (141 + 433));
										v79 = v67[v71];
										v77[v79[4 - 2]] = v79[368 - (12 + 353)];
										v71 = v71 + (521 - (150 + 370));
										v79 = v67[v71];
										v529 = v79[(6023 - 4739) - (74 + 1208)];
										v526, v527 = v70(v77[v529](v13(v77, v529 + 1 + 0, v79[2 + 1])));
										v524 = 41 - 24;
									end
									if (v524 == (0 + 0)) then
										v525 = nil;
										v526, v527 = nil;
										v528 = nil;
										v529 = nil;
										v77[v79[9 - 7]] = v60[v79[3 + 0]];
										v71 = v71 + (391 - (14 + 376));
										v79 = v67[v71];
										v77[v79[3 - 1]] = v79[2 + 1];
										v524 = 535 - (31 + 503);
									end
									if (v524 == (1 + 0)) then
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[1 + 1]] = v79[4 - 1];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v529 = v79[2 + 0];
										v77[v529] = v77[v529](v13(v77, v529 + ((999 + 819) - (348 + 1469)), v79[81 - ((800 - (227 + 550)) + 55)]));
										v71 = v71 + (2 - (2 - 1));
										v524 = 2 + 0;
									end
									if ((2740 == 2740) and (v524 == (7 + 0))) then
										v71 = v71 + (1868 - ((3161 - 2010) + 716));
										v79 = v67[v71];
										v77[v79[1 + 1]] = v79[4 - 1];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v529 = v79[903 - (652 + (352 - (72 + 31)))];
										v77[v529] = v77[v529](v13(v77, v529 + (2 - 1), v79[1871 - (708 + 1160)]));
										v71 = v71 + (2 - 1);
										v524 = 14 - 6;
									end
									if ((45 - (10 + (365 - (89 + 259)))) == v524) then
										v79 = v67[v71];
										v77[v79[1 + 1]] = v77[v79[1735 - (1400 + 332)]][v79[7 - 3]];
										v71 = v71 + (1909 - (212 + 30 + 1666));
										v79 = v67[v71];
										v77[v79[1 + 1]] = v77[v79[2 + 1]][v79[2 + 2]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[942 - (850 + 90)]] = v77[v79[4 - 1]][v79[4]];
										v524 = (1239 + 170) - (360 + 1030);
									end
									if ((v524 == (2 + 0)) or (95 >= 2754)) then
										v79 = v67[v71];
										v77[v79[5 - (1 + 2)]][v79[3 - (0 - 0)]] = v77[v79[1665 - (909 + 752)]];
										v71 = v71 + (1224 - (71 + 38 + 1114));
										v79 = v67[v71];
										v77[v79[3 - 1]] = {};
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2 + 0]] = v60[v79[(3 - 1) + 1]];
										v524 = 11 - 8;
									end
									if ((2453 <= 4911) and (v524 == (256 - (6 + 236)))) then
										v79 = v67[v71];
										v77[v79[(1405 - (1333 + 70)) + 0]] = v77[v79[(1835 - (701 + 1131)) + 0]];
										v71 = v71 + (1730 - (1391 + (465 - (55 + 72))));
										v79 = v67[v71];
										v77[v79[4 - 2]] = v61[v79[4 - 1]];
										v71 = v71 + (1134 - (1076 + 57));
										v79 = v67[v71];
										v529 = v79[1 + 1];
										v524 = 704 - (579 + 110);
									end
									if ((3208 < 3815) and ((8 + 14) == v524)) then
										v79 = v67[v71];
										v71 = v79[1 + 2];
										break;
									end
									if (v524 == (1414 - (496 + 912))) then
										v79 = v67[v71];
										v77[v79[2 + (156 - (99 + 57))]][v77[v79[(2 - 0) + 1]]] = v77[v79[411 - (174 + 233)]];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[3 - 1]] = v60[v79[2 + 0 + (1580 - (1243 + 336))]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[1176 - (663 + 511)]] = v79[3 + 0];
										v524 = 1739 - (1675 + 57);
									end
									if (v524 == (5 + 15)) then
										v77[v79[2]] = v61[v79[9 - 6]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[4 - 2]] = v77[v79[7 - 4]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v529 = v79[(1332 - (774 + 555)) - 1];
										v526, v527 = v70(v77[v529](v77[v529 + 1 + 0]));
										v524 = 2 + 19;
									end
									if ((v524 == ((356 + 389) - (628 + 104))) or (4914 <= 643)) then
										v77[v529] = v77[v529](v13(v77, v529 + (723 - (478 + 244)), v79[520 - (440 + 77)]));
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[7 - 5]][v77[v79[(2358 - (150 + 649)) - (655 + 572 + 329)]]] = v77[v79[1 + 3]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2 + 0]][v79[11 - 8]] = v77[v79[1449 - (695 + 750)]];
										v71 = v71 + (1 - 0) + 0;
										v524 = 14;
									end
									if (((1176 - (274 + (1718 - 828))) == v524) or (4131 < 3861)) then
										v79 = v67[v71];
										v77[v79[1986 - (1122 + 862)]] = v79[9 - 6];
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v77[v79[(12 - 5) - 5]] = v79[354 - (285 + 66)];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v529 = v79[2 + 0];
										v524 = 1323 - (682 + 628);
									end
									if ((3923 <= 4584) and (v524 == (4 + 17))) then
										v72 = (v527 + v529) - (300 - (176 + 24 + 99));
										v525 = 0 + 0;
										for v1164 = v529, v72 do
											local v1165 = (0 - 0) + 0;
											while true do
												if (v1165 == (269 - (239 + 30))) then
													v525 = v525 + 1 + 0 + 0;
													v77[v1164] = v526[v525];
													break;
												end
											end
										end
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v529 = v79[1 + 1];
										v77[v529](v13(v77, v529 + 1 + 0, v72));
										v71 = v71 + (1 - 0);
										v524 = 68 - 46;
									end
								end
							else
								local v530;
								v77[v79[317 - (306 + 9)]] = v61[v79[(4 + 6) - 7]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[1 + 1]] = v61[v79[2 + (744 - (549 + 194))]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[5 - 3]] = v77[v79[1378 - (1140 + 235)]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v530 = v79[2 + 0 + 0];
								v77[v530] = v77[v530](v13(v77, v530 + (3 - 2), v79[1 + 2]));
								v71 = v71 + (53 - (33 + 19));
								v79 = v67[v71];
								if (not v77[v79[1 + 1]] or (2087 >= 2808)) then
									v71 = v71 + (2 - 1);
								else
									v71 = v79[2 + 1];
								end
							end
						elseif ((897 >= 428) and (v80 <= (133 - 65))) then
							v77[v79[2 + 0]] = v77[v79[692 - (586 + 103)]] - v77[v79[1 + 3]];
						elseif (v80 == (212 - 143)) then
							if ((3875 <= 4416) and (v79[1490 - (1309 + 179)] == v77[v79[4 + 0]])) then
								v71 = v71 + (1 - 0);
							else
								v71 = v79[2 + 1];
							end
						else
							v77[v79[2 - (0 - 0)]] = {};
						end
					elseif ((v80 <= (195 - 122)) or (40 > 2063)) then
						if (v80 <= (54 + 17)) then
							do
								return;
							end
						elseif (v80 == (152 - (5 + 75))) then
							v77[v79[3 - (1 - 0)]][v77[v79[612 - (295 + 314)]]] = v77[v79[9 - 5]];
						else
							v77[v79[1964 - (1300 + 662)]] = {};
							v71 = v71 + 1;
							v79 = v67[v71];
							v61[v79[(8 + 1) - 6]] = v77[v79[1757 - ((4235 - 3057) + 577)]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[5 - 3]] = v79[(3111 - (453 + 1250)) - (851 + 554)];
							v71 = v71 + 1 + (0 - 0);
							v79 = v67[v71];
							v77[v79[5 - 3]] = v79[(6 + 0) - 3] ^ v77[v79[306 - (115 + 187)]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2 - 0]] = v61[v79[2 + 1]];
						end
					elseif (v80 <= (72 + 3)) then
						if (v80 == (291 - 217)) then
							local v551;
							local v552;
							v552 = v79[1163 - (160 + 1001)];
							v551 = v77[v79[3 + (575 - (203 + 372))]];
							v77[v552 + 1] = v551;
							v77[v552] = v551[v79[1 + 2 + 1]];
							v71 = v71 + (1 - 0);
							v79 = v67[v71];
							v552 = v79[2];
							v77[v552](v77[v552 + 1]);
							v71 = v71 + (359 - (237 + 121));
							v79 = v67[v71];
							v77[v79[899 - (525 + 372)]] = v61[v79[(11 - 7) - 1]];
							v71 = v71 + ((1385 - (978 + 404)) - 2);
							v79 = v67[v71];
							v77[v79[144 - (96 + (147 - 101))]] = v77[v79[780 - (643 + 134)]][v79[2 + 0 + 2]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[4 - 2]] = v79[11 - 8];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v552 = v79[2];
							v77[v552](v77[v552 + (1 - 0)]);
							v71 = v71 + (1 - 0);
							v79 = v67[v71];
							v71 = v79[722 - (316 + 403)];
						else
							local v567;
							local v568, v569;
							local v570;
							local v571;
							v571 = v79[2 + 0];
							v570 = v77[v79[8 - 5]];
							v77[v571 + 1 + 0] = v570;
							v77[v571] = v570[v79[9 - 5]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[1596 - (272 + 1322)]] = v77[v79[1 + (320 - (56 + 262))]];
							v71 = v71 + (3 - 2);
							v79 = v67[v71];
							v77[v79[9 - (3 + 4)]] = v79[5 - 2];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[3 - 1]] = v79[1 + 2];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v571 = v79[19 - (12 + 5)];
							v568, v569 = v70(v77[v571](v13(v77, v571 + (3 - 2), v79[5 - 2])));
							v72 = (v569 + v571) - (1 - (114 - (108 + 6)));
							v567 = 0 - 0;
							for v762 = v571, v72 do
								v567 = v567 + 1 + 0 + 0;
								v77[v762] = v568[v567];
							end
							v71 = v71 + 1 + 0 + 0;
							v79 = v67[v71];
							v571 = v79[1975 - (1656 + 317)];
							v77[v571] = v77[v571](v13(v77, v571 + 1 + 0, v72));
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[2 + 0]] = v77[v79[7 - (1956 - (653 + 1299))]][v79[19 - 15]];
							v71 = v71 + (355 - (5 + 349));
							v79 = v67[v71];
							v61[v79[14 - 11]] = v77[v79[1273 - (266 + 878 + 127)]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[(3 + 3) - 4]] = v61[v79[3 - 0]];
							v71 = v71 + (1697 - (561 + 1135));
							v79 = v67[v71];
							v77[v79[2 - (0 - 0)]] = v77[v79[(1972 - (1042 + 880)) - (13 + 34)]][v79[1293 - (27 + 315 + 947)]];
						end
					elseif (v80 > (249 - 173)) then
						if ((3347 > 2887) and (v79[1068 - (507 + 559)] == v79[9 - 5])) then
							v71 = v71 + (3 - (1004 - (16 + 986)));
						else
							v71 = v79[391 - (212 + 176)];
						end
					else
						local v594;
						local v595, v596;
						local v597;
						v77[v79[2 - (1218 - (700 + 518))]] = v77[v79[908 - ((814 - 564) + 655)]];
						v71 = v71 + 1;
						v79 = v67[v71];
						v77[v79[2]] = v79[(9 - 1) - 5];
						v71 = v71 + (1 - 0);
						v79 = v67[v71];
						v77[v79[2]] = v79[4 - 1];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v597 = v79[(3469 - (617 + 894)) - (1869 + (173 - 86))];
						v595, v596 = v70(v77[v597](v13(v77, v597 + (3 - 2), v79[1001 - (197 + (1259 - (271 + 187)))])));
						v72 = (v596 + v597) - (1902 - (484 + 1417));
						v594 = 0 - 0;
						for v765 = v597, v72 do
							local v766 = 0 - 0;
							while true do
								if (v766 == (773 - (48 + 725))) then
									v594 = v594 + 1;
									v77[v765] = v595[v594];
									break;
								end
							end
						end
						v71 = v71 + (1585 - (731 + 853)) + 0;
						v79 = v67[v71];
						v597 = v79[6 - 4];
						v77[v597](v13(v77, v597 + (1 - 0), v72));
					end
				elseif ((4943 > 700) and (v80 <= (241 - 151))) then
					if ((v80 <= 83) or (2802 >= 4413)) then
						if ((3528 <= 4130) and (v80 <= (47 + 33))) then
							if (v80 <= (35 + (1564 - (199 + 1322)))) then
								local v193 = 0 - 0;
								local v194;
								local v195;
								local v196;
								local v197;
								while true do
									if ((4423 >= 3045) and (((0 - 0) + 0 + 0) == v193)) then
										v194 = v79[1 + 1];
										v195, v196 = v70(v77[v194](v13(v77, v194 + (854 - (152 + 701)), v72)));
										v193 = 1312 - (430 + (2541 - (1291 + 369)));
									end
									if ((2726 == 2726) and (v193 == (1 + 0))) then
										v72 = (v196 + v194) - (896 - (557 + 338));
										v197 = 0 - 0;
										v193 = (1 + 7) - 6;
									end
									if (v193 == (1 + 1)) then
										for v821 = v194, v72 do
											v197 = v197 + (2 - 1);
											v77[v821] = v195[v197];
										end
										break;
									end
								end
							elseif (v80 > (276 - 197)) then
								if ((v77[v79[4 - (1 + 1)]] <= v77[v79[8 - 4]]) or (3011 < 172)) then
									v71 = v71 + 1 + 0 + 0 + 0;
								else
									v71 = v79[804 - (499 + 302)];
								end
							else
								local v606 = v79[2];
								local v607 = {};
								for v768 = 867 - (39 + 827), #v76 do
									local v769 = 0 - 0;
									local v770;
									while true do
										if (v769 == 0) then
											v770 = v76[v768];
											for v1199 = 0 - 0, #v770 do
												local v1200 = v770[v1199];
												local v1201 = v1200[3 - 2];
												local v1202 = v1200[2 - 0];
												if ((v1201 == v77) and (v1202 >= v606)) then
													local v1215 = 0 - 0;
													while true do
														if (0 == v1215) then
															v607[v1202] = v1201[v1202];
															v1200[1 + 0] = v607;
															break;
														end
													end
												end
											end
											break;
										end
									end
								end
							end
						elseif ((485 <= 4911) and (v80 <= (237 - 156))) then
							if v77[v79[2 - 0]] then
								v71 = v71 + 1 + 0;
							else
								v71 = v79[688 - (561 + 124)];
							end
						elseif ((v80 > (129 - 47)) or (4 == 4906)) then
							v77[v79[106 - (103 + 1)]] = v77[v79[1514 - (292 + 1219)]] + v77[v79[558 - (475 + 79)]];
						else
							local v610 = 0 - 0;
							local v611;
							local v612;
							local v613;
							while true do
								if ((3 - 2) == v610) then
									v613 = {};
									v612 = v10({}, {__index=function(v1169, v1170)
										local v1171 = v613[v1170];
										return v1171[1 + 0][v1171[2 + 0]];
									end,__newindex=function(v1172, v1173, v1174)
										local v1175 = v613[v1173];
										v1175[1504 - (1395 + 108)][v1175[5 - 3]] = v1174;
									end});
									v610 = 1206 - (7 + 1197);
								end
								if (((0 + 0) == v610) or (942 >= 2054)) then
									v611 = v68[v79[2 + 1]];
									v612 = nil;
									v610 = 320 - (27 + 292);
								end
								if (v610 == (5 - 3)) then
									for v1177 = 1354 - (1338 + 15), v79[4 - (853 - (25 + 828))] do
										v71 = v71 + 1 + 0;
										local v1178 = v67[v71];
										if ((415 <= 4986) and (v1178[4 - 3] == (7 - 3))) then
											v613[v1177 - (1 - 0)] = {v77,v1178[6 - 3]};
										else
											v613[v1177 - (1 + 0)] = {v60,v1178[5 - 2]};
										end
										v76[#v76 + (451 - (168 + 282))] = v613;
									end
									v77[v79[(51 - (18 + 30)) - 1]] = v29(v611, v612, v61);
									break;
								end
							end
						end
					elseif ((v80 <= (33 + 53)) or (3324 >= 4808)) then
						if (v80 <= (157 - 73)) then
							if (v79[1 + 1] < v79[1 + 3]) then
								v71 = v71 + (1752 - (1414 + 337));
							else
								v71 = v79[1943 - (1642 + 298)];
							end
						elseif (v80 == ((534 - 313) - 136)) then
							v77[v79[5 - 3]] = v61[v79[3 + 0]];
						else
							v77[v79[5 - 3]] = v77[v79[1 + 2]] + v79[4 + 0];
						end
					elseif (v80 <= ((2107 - 1047) - (357 + 615))) then
						if (v80 > (62 + (40 - 15))) then
							v77[v79[4 - (1 + 1)]] = #v77[v79[3 + 0]];
						else
							v77[v79[1949 - (1427 + 520)]] = v60[v79[3]];
						end
					elseif (v80 > (190 - 101)) then
						v77[v79[2 + 0]] = v79[1 + 2] ^ v77[v79[3 + 1]];
						v71 = v71 + (1302 - (384 + 917));
						v79 = v67[v71];
						v77[v79[699 - (128 + 569)]] = v77[v79[1349 - (565 + 781)]] * v77[v79[(5167 - 3620) - (1407 + 136)]];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v77[v79[1889 - (687 + 1200)]] = v60[v79[1713 - (556 + 1154)]];
						v71 = v71 + ((735 - (501 + 231)) - 2);
						v79 = v67[v71];
						v77[v79[1 + 1]] = v77[v79[4 - 1]] % v77[v79[17 - 13]];
						v71 = v71 + (96 - (9 + 86));
						v79 = v67[v71];
						do
							return v77[v79[(373 + 50) - (275 + 146)]];
						end
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v71 = v79[1 + 2];
					else
						local v628 = 64 - (29 + 35);
						local v629;
						local v630;
						local v631;
						local v632;
						while true do
							if (v628 == 12) then
								for v1180 = v632, v72 do
									local v1181 = 0 - (1698 - (470 + 1228));
									while true do
										if ((v1181 == (0 - 0)) or (729 == 2290)) then
											v629 = v629 + (4 - 3);
											v77[v1180] = v630[v629];
											break;
										end
									end
								end
								v71 = v71 + ((2 + 0) - 1);
								v79 = v67[v71];
								v632 = v79[2 + 0 + 0];
								v77[v632](v13(v77, v632 + (1013 - ((739 - (537 + 149)) + 959)), v72));
								break;
							end
							if (((417 - (312 + 96)) == v628) or (1361 <= 276)) then
								v630, v631 = v70(v77[v632](v13(v77, v632 + (1 - 0), v79[8 - 5])));
								v72 = (v631 + v632) - (286 - (147 + 138));
								v629 = 1365 - (205 + 1160);
								for v1182 = v632, v72 do
									local v1183 = 0 + 0;
									while true do
										if (v1183 == (899 - (813 + 86))) then
											v629 = v629 + (1306 - (535 + 770));
											v77[v1182] = v630[v629];
											break;
										end
									end
								end
								v71 = v71 + 1 + (0 - 0);
								v79 = v67[v71];
								v632 = v79[3 - 1];
								v630, v631 = v70(v77[v632](v13(v77, v632 + (493 - (18 + 474)), v72)));
								v628 = 4 + 6;
							end
							if (v628 == (1 + 3 + 2)) then
								v71 = v71 + (1430 - (1236 + 193));
								v79 = v67[v71];
								v77[v79[912 - (793 + 117)]] = #v77[v79[9 - 6]];
								v71 = v71 + (1087 - (860 + (474 - 248)));
								v79 = v67[v71];
								v77[v79[(968 - 663) - ((359 - 238) + 182)]] = v77[v79[1 + 2]] % v77[v79[1244 - (988 + 252)]];
								v71 = v71 + 1 + 0 + 0;
								v79 = v67[v71];
								v628 = 3 + 2 + 2;
							end
							if (v628 == (1973 - (49 + 1921))) then
								v77[v79[2]] = v77[v79[3]] + v79[894 - (223 + 411 + 256)];
								v71 = v71 + (53 - (51 + 1));
								v79 = v67[v71];
								v77[v79[2 - 0]] = v77[v79[1 + 1 + 1]] + v79[8 - 4];
								v71 = v71 + (1126 - (146 + 979));
								v79 = v67[v71];
								v632 = v79[1 + 1];
								v630, v631 = v70(v77[v632](v13(v77, v632 + (606 - (311 + 294)), v79[2 + 1])));
								v628 = 11 - 7;
							end
							if ((1700 < 3627) and (v628 == (5 + 6))) then
								v79 = v67[v71];
								v77[v79[1445 - (496 + 947)]] = v77[v79[1361 - (1233 + 125)]] % v79[3 + 1];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v632 = v79[2 + 0];
								v630, v631 = v70(v77[v632](v77[v632 + 1 + 0]));
								v72 = (v631 + v632) - (1 + 0);
								v629 = 323 - (140 + 183);
								v628 = 1657 - (109 + 854 + 682);
							end
							if ((5 + 0) == v628) then
								v79 = v67[v71];
								v77[v79[1506 - (504 + 700 + 300)]] = v60[v79[3 + 0]];
								v71 = v71 + (343 - (37 + 305));
								v79 = v67[v71];
								v77[v79[2 + 0]] = v60[v79[3]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2 - 0]] = v77[v79[4 - 1]];
								v628 = 6 + 0;
							end
							if (v628 == 8) then
								v79 = v67[v71];
								v77[v79[(2 - 0) + 0]] = v79[185 - (156 + 12 + 14)] + v77[v79[3 + 1]];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v77[v79[166 - (149 + 15)]] = v77[v79[963 - (890 + 70)]] + v79[5 - 1];
								v71 = v71 + (118 - (39 + 78));
								v79 = v67[v71];
								v632 = v79[484 - (14 + (1047 - (134 + 445)))];
								v628 = 19 - 10;
							end
							if ((v628 == (2 - 1)) or (4298 == 1123)) then
								v79 = v67[v71];
								v77[v79[2 + 0]] = v60[v79[2 + 1]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[1 + (1 - 0)]] = v60[v79[2 + 1]];
								v71 = v71 + 1 + 0 + 0;
								v79 = v67[v71];
								v77[v79[3 - 1]] = v60[v79[3 + 0]];
								v628 = 6 - 4;
							end
							if (v628 == (1 + 3)) then
								v72 = (v631 + v632) - (52 - (12 + 39));
								v629 = 0 + 0;
								for v1184 = v632, v72 do
									v629 = v629 + ((2 + 0) - 1);
									v77[v1184] = v630[v629];
								end
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v632 = v79[2];
								v77[v632] = v77[v632](v13(v77, v632 + 1 + 0, v72));
								v71 = v71 + 1 + 0;
								v628 = 703 - (66 + 632);
							end
							if ((v628 == (0 - 0)) or (4029 <= 3171)) then
								v629 = nil;
								v630, v631 = nil;
								v632 = nil;
								v77[v79[2 + 0]] = v77[v79[7 - 4]];
								v71 = v71 + (4 - (11 - 8));
								v79 = v67[v71];
								v77[v79[1712 - (1596 + (374 - (36 + 224)))]] = v60[v79[7 - 4]];
								v71 = v71 + (714 - (164 + 549));
								v628 = 1439 - (1059 + 379);
							end
							if (v628 == (2 - 0)) then
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[1 + 1]] = v77[v79[395 - (145 + 247)]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[(1862 - (1033 + 827)) + 0]] = v77[v79[1173 - (979 + (2037 - (1002 + 844)))]];
								v71 = v71 + (1351 - (1126 + 224)) + 0;
								v79 = v67[v71];
								v628 = 8 - 5;
							end
							if ((2536 <= 4256) and ((2 + 8) == v628)) then
								v72 = (v631 + v632) - (1 + 0 + 0);
								v629 = 0 + 0;
								for v1187 = v632, v72 do
									v629 = v629 + (1 - 0);
									v77[v1187] = v630[v629];
								end
								v71 = v71 + (721 - (254 + 466));
								v79 = v67[v71];
								v632 = v79[562 - (544 + 16)];
								v77[v632] = v77[v632](v13(v77, v632 + (2 - (1 + 0)), v72));
								v71 = v71 + 1;
								v628 = 34 - 23;
							end
							if (v628 == (635 - (294 + 334))) then
								v77[v79[255 - ((796 - 560) + 17)]] = v79[2 + 1] + v77[v79[4 + 0]];
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v77[v79[2]] = #v77[v79[14 - 11]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2 + 0]] = v77[v79[797 - (413 + 381)]] % v77[v79[4 + 0]];
								v71 = v71 + 1 + (64 - (48 + 16));
								v628 = 16 - (6 + 2);
							end
						end
					end
				elseif (v80 <= (736 - (455 + 185))) then
					if ((3202 <= 4105) and (v80 <= (241 - 148))) then
						if (v80 <= (2061 - (582 + 1388))) then
							local v198 = 0;
							local v199;
							local v200;
							local v201;
							while true do
								if (v198 == (1 - 0)) then
									v201 = v77[v199 + 2 + 0];
									if (v201 > (364 - (326 + 38))) then
										if ((v200 > v77[v199 + (2 - 1)]) or (2742 < 66)) then
											v71 = v79[14 - 11];
										else
											v77[v199 + (3 - (0 - 0))] = v200;
										end
									elseif (v200 < v77[v199 + ((1 + 0) - 0)]) then
										v71 = v79[623 - (47 + 573)];
									else
										v77[v199 + 2 + 1] = v200;
									end
									break;
								end
								if (v198 == (0 - 0)) then
									v199 = v79[2 - 0];
									v200 = v77[v199];
									v198 = 1090 - (910 + 179);
								end
							end
						elseif (v80 > (1756 - (1269 + 395))) then
							local v633;
							local v634;
							local v633, v635;
							local v636;
							local v637;
							v61[v79[5 - 2]] = v77[v79[494 - (76 + 416)]];
							v71 = v71 + (444 - ((631 - 312) + 124));
							v79 = v67[v71];
							v77[v79[4 - (3 - 1)]] = v61[v79[1010 - (564 + 443)]];
							v71 = v71 + (2 - (1380 - (933 + 446)));
							v79 = v67[v71];
							v637 = v79[460 - (337 + 121)];
							v636 = v77[v79[8 - 5]];
							v77[v637 + (3 - 2)] = v636;
							v77[v637] = v636[v79[1684 - (281 + 1399)]];
							v71 = v71 + (1660 - (184 + 580 + 895));
							v79 = v67[v71];
							v637 = v79[(3437 - (248 + 1276)) - (1261 + 650)];
							v633, v635 = v70(v77[v637](v77[v637 + 1 + 0]));
							v72 = (v635 + v637) - (1 + 0);
							v634 = 0 - 0;
							for v774 = v637, v72 do
								v634 = v634 + ((1 + 1) - 1);
								v77[v774] = v633[v634];
							end
							v71 = v71 + 1;
							v79 = v67[v71];
							v637 = v79[2 - (0 - 0)];
							v633 = {v77[v637](v13(v77, v637 + 1 + 0, v72))};
							v634 = (487 - 343) - (102 + 42);
							for v777 = v637, v79[(3393 - (151 + 1394)) - (1524 + 320)] do
								v634 = v634 + (1271 - (1049 + (1165 - (929 + 15))));
								v77[v777] = v633[v634];
							end
							v71 = v71 + 1;
							v79 = v67[v71];
							v71 = v79[159 - (18 + 138)];
						else
							local v651 = 0 - 0;
							local v652;
							local v653;
							local v654;
							local v655;
							local v656;
							while true do
								if (v651 == (1108 - (67 + 1035))) then
									v77[v79[(2346 - (1173 + 823)) - ((219 - 83) + 212)]] = v79[2 + 1];
									v71 = v71 + (4 - 3);
									v79 = v67[v71];
									v61[v79[3 + 0]] = v77[v79[2 + 0]];
									v71 = v71 + (1605 - ((2016 - (482 + 1294)) + 1364));
									v79 = v67[v71];
									v651 = 1089 - (1050 + 32);
								end
								if (v651 == ((34 - 17) - 12)) then
									v77[v79[2 + 0]] = v77[v79[1058 - (331 + 724)]][v79[1 + 3]];
									v71 = v71 + (645 - (269 + 375));
									v79 = v67[v71];
									v77[v79[727 - (267 + 458)]] = v77[v79[1 + 2]][v79[229 - (182 + 43)]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v651 = 6;
								end
								if (v651 == (820 - (667 + 151))) then
									v79 = v67[v71];
									v77[v79[1499 - (1410 + 87)]] = v79[1900 - (1504 + 393)];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[5 - 3]] = v79[1 + 0 + 2];
									v71 = v71 + ((2103 - (1125 + 181)) - ((1344 - 883) + 335));
									v651 = 1 + 2;
								end
								if (v651 == ((122 + 76) - ((210 - 79) + 66))) then
									v77[v656 + (3 - 2)] = v655;
									v77[v656] = v655[v79[1765 - (1730 + 31)]];
									v71 = v71 + (1668 - (728 + (2128 - (626 + 563))));
									v79 = v67[v71];
									v77[v79[2]] = v60[v79[10 - 7]];
									v71 = v71 + (1 - 0);
									v651 = 4 - 2;
								end
								if ((5 - 1) == v651) then
									v71 = v71 + (1069 - (138 + 930));
									v79 = v67[v71];
									v656 = v79[2 + 0];
									v77[v656] = v77[v656](v13(v77, v656 + 1, v72));
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v651 = (1255 - (153 + 1097)) + 0;
								end
								if ((v651 == (28 - 21)) or (1788 <= 394)) then
									v77[v79[1768 - (459 + 1307)]] = v79[11 - (26 - 18)];
									break;
								end
								if (v651 == (1873 - (474 + 683 + 713))) then
									v79 = v67[v71];
									v656 = v79[5 - (7 - 4)];
									v653, v654 = v70(v77[v656](v13(v77, v656 + (1 - 0), v79[2 + 1 + 0])));
									v72 = (v654 + v656) - 1;
									v652 = 0 + 0;
									for v1190 = v656, v72 do
										v652 = v652 + (2 - 1);
										v77[v1190] = v653[v652];
									end
									v651 = 1 + 3;
								end
								if (v651 == (0 - 0)) then
									v652 = nil;
									v653, v654 = nil;
									v655 = nil;
									v656 = nil;
									v656 = v79[8 - 6];
									v655 = v77[v79[(467 + 127) - (562 + 9 + 20)]];
									v651 = 107 - (79 + 27);
								end
							end
						end
					elseif (v80 <= (75 + 19)) then
						do
							return v77[v79[2 + 0]];
						end
					elseif ((2920 >= 2247) and (v80 > (1514 - (374 + 1045)))) then
						v77[v79[2 + 0]] = v77[v79[9 - 6]] * v77[v79[642 - (448 + 190)]];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v77[v79[1 + 1]] = v60[v79[2 + 1]];
						v71 = v71 + (4 - 3);
						v79 = v67[v71];
						v77[v79[7 - 5]] = v77[v79[8 - 5]] % v77[v79[1498 - (1307 + 187)]];
						v71 = v71 + (2 - 1);
						v79 = v67[v71];
						do
							return v77[v79[7 - 5]];
						end
						v71 = v71 + (2 - 1);
						v79 = v67[v71];
						v71 = v79[8 - 5];
					else
						v61[v79[686 - (232 + 451)]] = v77[v79[2 + 0 + 0]];
					end
				elseif (v80 <= (88 + 11)) then
					if (v80 <= (661 - (510 + 54))) then
						local v202 = 0 + 0;
						local v203;
						while true do
							if (v202 == (2 + 1)) then
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v203 = v79[38 - (13 + 23)];
								do
									return v13(v77, v203, v72);
								end
								v202 = 4;
							end
							if (v202 == (441 - (82 + 11 + 344))) then
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v71 = v79[3 - 0];
								break;
							end
							if ((v202 == (5 - 3)) or (1547 == 1699)) then
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v203 = v79[1090 - ((1987 - (199 + 958)) + 258)];
								do
									return v77[v203](v13(v77, v203 + 1 + 0, v79[477 - (33 + 284 + 157)]));
								end
								v202 = 10 - 7;
							end
							if (v202 == (1420 - (64 + 1355))) then
								v77[v79[2 + (0 - 0)]] = v79[(6 - 3) + 0] ^ v77[v79[1445 - (860 + 581)]];
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[3 + 0]] * v77[v79[245 - (237 + 4)]];
								v202 = 4 - 2;
							end
							if (v202 == (0 - 0)) then
								v203 = nil;
								v77[v79[3 - 1]] = v77[v79[3 + (1176 - (1169 + 7))]][v79[3 + 1]];
								v71 = v71 + (295 - (50 + 244));
								v79 = v67[v71];
								v202 = 3 - 2;
							end
						end
					elseif (v80 > (43 + 55)) then
						local v665 = 0 - 0;
						local v666;
						while true do
							if (v665 == (0 + 0)) then
								v666 = v79[1875 - (751 + 1122)];
								v77[v666] = v77[v666](v13(v77, v666 + (1427 - (85 + 1341)), v72));
								break;
							end
						end
					else
						local v667 = 0 - 0;
						while true do
							if (v667 == (2 - 1)) then
								v71 = v71 + (373 - (45 + 327));
								v79 = v67[v71];
								v77[v79[3 - 1]] = v77[v79[505 - (444 + 58)]] % v77[v79[2 + 2]];
								v71 = v71 + 1 + 0;
								v667 = 1 + 1;
							end
							if ((177 <= 3195) and (v667 == (8 - 5))) then
								v77[v79[1734 - (64 + 1668)]] = v79[1976 - (1227 + 746)];
								break;
							end
							if ((1777 - (1263 + 514)) == v667) then
								v77[v79[(1 + 4) - 3]] = v77[v79[7 - 4]] % v77[v79[6 - 2]];
								v71 = v71 + (495 - (415 + 79));
								v79 = v67[v71];
								v77[v79[1937 - (1756 + 179)]] = v60[v79[1 + 0 + 2]];
								v667 = 492 - (142 + 349);
							end
							if (v667 == (631 - (30 + 599))) then
								v79 = v67[v71];
								v77[v79[1 + 1]] = v77[v79[3 - 0]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v667 = 3 + 0 + 0;
							end
						end
					end
				elseif ((796 <= 2110) and (v80 <= (1019 - (794 + 124)))) then
					if ((1057 <= 1754) and (v80 > (272 - (32 + 140)))) then
						local v668 = 1864 - (1710 + 154);
						local v669;
						local v670;
						local v671;
						while true do
							if ((319 - (200 + 118)) == v668) then
								v671 = v77[v669] + v670;
								v77[v669] = v671;
								v668 = 3 - (1 - 0);
							end
							if (v668 == (0 + 0)) then
								v669 = v79[2 - 0];
								v670 = v77[v669 + (5 - 3)];
								v668 = 1;
							end
							if (((1183 - (589 + 592)) - 0) == v668) then
								if ((v670 > (0 + 0)) or (2479 < 2338)) then
									if (v671 <= v77[v669 + 1 + 0]) then
										local v1220 = 0 + 0;
										while true do
											if ((v1220 == (0 + 0)) or (1622 == 4950)) then
												v71 = v79[1 + 2];
												v77[v669 + (6 - 3)] = v671;
												break;
											end
										end
									end
								elseif (v671 >= v77[v669 + 1]) then
									local v1221 = 1250 - (363 + 887);
									while true do
										if (v1221 == (0 + 0)) then
											v71 = v79[5 - 2];
											v77[v669 + (1281 - (243 + 1035))] = v671;
											break;
										end
									end
								end
								break;
							end
						end
					else
						local v672;
						v77[v79[4 - 2]] = v60[v79[14 - 11]];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v77[v79[4 - 2]] = v79[(5 - 2) + 0];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v77[v79[2]] = v79[1667 - (674 + 990)];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v672 = v79[1 + 1];
						v77[v672] = v77[v672](v13(v77, v672 + (1 - 0), v79[1058 - (507 + 548)]));
						v71 = v71 + (838 - (289 + 548));
						v79 = v67[v71];
						v77[v79[1820 - (821 + 997)]] = v61[v79[258 - (195 + 60)]];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v77[v79[1503 - (251 + 1250)]] = v61[v79[8 - 5]];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v672 = v79[1034 - (809 + 68 + 155)];
						v77[v672](v13(v77, v672 + 1, v79[3 - 0]));
						v71 = v71 + (2 - 1);
						v79 = v67[v71];
						v71 = v79[9 - 6];
					end
				elseif (v80 > (76 + 26)) then
					local v687 = v79[2 + (24 - (13 + 11))];
					local v688 = v77[v79[9 - 6]];
					v77[v687 + (618 - (14 + 603))] = v688;
					v77[v687] = v688[v79[133 - (118 + 11)]];
				else
					local v692 = 0 + 0;
					local v693;
					while true do
						if (v692 == (839 - (137 + 702))) then
							v693 = v79[2 + 0];
							v77[v693] = v77[v693](v13(v77, v693 + (2 - 1), v79[3]));
							break;
						end
					end
				end
				v71 = v71 + (950 - (551 + 398));
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);